// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ohtmessage.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace com.mirle.iibg3k0.ids.ProtocolFormat.OHTMessage {

  /// <summary>Holder for reflection information generated from ohtmessage.proto</summary>
  public static partial class OhtmessageReflection {

    #region Descriptor
    /// <summary>File descriptor for ohtmessage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static OhtmessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBvaHRtZXNzYWdlLnByb3RvEgh0dXRvcmlhbCKqAgoWSURfMTM0X1RSQU5T",
            "X0VWRU5UX1JFUBImCglFdmVudFR5cGUYASABKA4yEy50dXRvcmlhbC5FdmVu",
            "dFR5cGUSFAoMQ3VycmVudEFkcklEGAIgASgJEhQKDEN1cnJlbnRTZWNJRBgD",
            "IAEoCRIpCgZIYXNDU1QYBCABKA4yGS50dXRvcmlhbC5WaExvYWRDU1RTdGF0",
            "dXMSDgoGQ1NUX0lEGAUgASgJEjQKE0xlZnRHdWlkZUxvY2tTdGF0dXMYBiAB",
            "KA4yFy50dXRvcmlhbC5WaEd1aWRlU3RhdHVzEjUKFFJpZ2h0R3VpZGVMb2Nr",
            "U3RhdHVzGAcgASgOMhcudHV0b3JpYWwuVmhHdWlkZVN0YXR1cxIUCgxTZWNf",
            "RGlzdGFuY2UYCCABKAUqcgoMVkhNb2RlU3RhdHVzEggKBE5vbmUQABIVChFJ",
            "bml0aWFsX1Bvd2VyX09GRhABEhQKEEluaXRpYWxfUG93ZXJfT04QAhIKCgZN",
            "YW51YWwQAxIPCgtBdXRvX1JlbW90ZRAEEg4KCkF1dG9fTG9jYWwQBSpmCg5W",
            "SEFjdGlvblN0YXR1cxINCglOb25BY3Rpb24QABIKCgZBY3Rpb24QARIICgRI",
            "b21lEAISDAoIVGVhY2hpbmcQAxITCg9HcmlwcGVyVGVhY2hpbmcQBBIMCghD",
            "eWNsZVJ1bhAFKjUKDFZoU3RvcFNpbmdsZRISCg5TdG9wU2luZ2xlX09mZhAA",
            "EhEKDVN0b3BTaW5nbGVfT24QASqgAgoJRXZlbnRUeXBlEhAKDExvYWRBcnJp",
            "dmFscxAAEhAKDExvYWRDb21wbGV0ZRABEhIKDlVubG9hZEFycml2YWxzEAIS",
            "EgoOVW5sb2FkQ29tcGxldGUQAxIVChFBZHJPck1vdmVBcnJpdmFscxAEEgsK",
            "B0FkclBhc3MQBRINCglNb3ZlUGF1c2UQBhIPCgtNb3ZlUmVzdGFydBAHEgwK",
            "CEJsb2NrUmVxEAgSCgoGSElEUmVxEAkSDQoJVkhMb2FkaW5nEAsSDwoLVkhV",
            "bmxvYWRpbmcQDBISCg5WSE1vdmVBcnJpdmFscxANEhAKDEJsb2NrUmVsZWFz",
            "ZRAVEg4KCkhJRFJlbGVhc2UQFhITCg9CbG9ja0hJRFJlbGVhc2UQFyoqCg9W",
            "aExvYWRDU1RTdGF0dXMSDAoITm90RXhpc3QQABIJCgVFeGlzdBABKiUKDVZo",
            "R3VpZGVTdGF0dXMSCgoGVW5sb2NrEAASCAoETG9jaxABQlsKFGNvbS5leGFt",
            "cGxlLnR1dG9yaWFsQhFBZGRyZXNzQm9va1Byb3Rvc6oCL2NvbS5taXJsZS5p",
            "aWJnM2swLmlkcy5Qcm90b2NvbEZvcm1hdC5PSFRNZXNzYWdlYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::com.mirle.iibg3k0.ids.ProtocolFormat.OHTMessage.VHModeStatus), typeof(global::com.mirle.iibg3k0.ids.ProtocolFormat.OHTMessage.VHActionStatus), typeof(global::com.mirle.iibg3k0.ids.ProtocolFormat.OHTMessage.VhStopSingle), typeof(global::com.mirle.iibg3k0.ids.ProtocolFormat.OHTMessage.EventType), typeof(global::com.mirle.iibg3k0.ids.ProtocolFormat.OHTMessage.VhLoadCSTStatus), typeof(global::com.mirle.iibg3k0.ids.ProtocolFormat.OHTMessage.VhGuideStatus), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::com.mirle.iibg3k0.ids.ProtocolFormat.OHTMessage.ID_134_TRANS_EVENT_REP), global::com.mirle.iibg3k0.ids.ProtocolFormat.OHTMessage.ID_134_TRANS_EVENT_REP.Parser, new[]{ "EventType", "CurrentAdrID", "CurrentSecID", "HasCST", "CSTID", "LeftGuideLockStatus", "RightGuideLockStatus", "SecDistance" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum VHModeStatus {
    [pbr::OriginalName("None")] None = 0,
    [pbr::OriginalName("Initial_Power_OFF")] InitialPowerOff = 1,
    [pbr::OriginalName("Initial_Power_ON")] InitialPowerOn = 2,
    [pbr::OriginalName("Manual")] Manual = 3,
    [pbr::OriginalName("Auto_Remote")] AutoRemote = 4,
    [pbr::OriginalName("Auto_Local")] AutoLocal = 5,
  }

  public enum VHActionStatus {
    [pbr::OriginalName("NonAction")] NonAction = 0,
    [pbr::OriginalName("Action")] Action = 1,
    [pbr::OriginalName("Home")] Home = 2,
    [pbr::OriginalName("Teaching")] Teaching = 3,
    [pbr::OriginalName("GripperTeaching")] GripperTeaching = 4,
    [pbr::OriginalName("CycleRun")] CycleRun = 5,
  }

  public enum VhStopSingle {
    [pbr::OriginalName("StopSingle_Off")] StopSingleOff = 0,
    [pbr::OriginalName("StopSingle_On")] StopSingleOn = 1,
  }

  public enum EventType {
    [pbr::OriginalName("LoadArrivals")] LoadArrivals = 0,
    [pbr::OriginalName("LoadComplete")] LoadComplete = 1,
    [pbr::OriginalName("UnloadArrivals")] UnloadArrivals = 2,
    [pbr::OriginalName("UnloadComplete")] UnloadComplete = 3,
    [pbr::OriginalName("AdrOrMoveArrivals")] AdrOrMoveArrivals = 4,
    [pbr::OriginalName("AdrPass")] AdrPass = 5,
    [pbr::OriginalName("MovePause")] MovePause = 6,
    [pbr::OriginalName("MoveRestart")] MoveRestart = 7,
    [pbr::OriginalName("BlockReq")] BlockReq = 8,
    [pbr::OriginalName("HIDReq")] Hidreq = 9,
    [pbr::OriginalName("VHLoading")] Vhloading = 11,
    [pbr::OriginalName("VHUnloading")] Vhunloading = 12,
    [pbr::OriginalName("VHMoveArrivals")] VhmoveArrivals = 13,
    [pbr::OriginalName("BlockRelease")] BlockRelease = 21,
    [pbr::OriginalName("HIDRelease")] Hidrelease = 22,
    [pbr::OriginalName("BlockHIDRelease")] BlockHidrelease = 23,
  }

  public enum VhLoadCSTStatus {
    [pbr::OriginalName("NotExist")] NotExist = 0,
    [pbr::OriginalName("Exist")] Exist = 1,
  }

  public enum VhGuideStatus {
    [pbr::OriginalName("Unlock")] Unlock = 0,
    [pbr::OriginalName("Lock")] Lock = 1,
  }

  #endregion

  #region Messages
  public sealed partial class ID_134_TRANS_EVENT_REP : pb::IMessage<ID_134_TRANS_EVENT_REP> {
    private static readonly pb::MessageParser<ID_134_TRANS_EVENT_REP> _parser = new pb::MessageParser<ID_134_TRANS_EVENT_REP>(() => new ID_134_TRANS_EVENT_REP());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ID_134_TRANS_EVENT_REP> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::com.mirle.iibg3k0.ids.ProtocolFormat.OHTMessage.OhtmessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ID_134_TRANS_EVENT_REP() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ID_134_TRANS_EVENT_REP(ID_134_TRANS_EVENT_REP other) : this() {
      eventType_ = other.eventType_;
      currentAdrID_ = other.currentAdrID_;
      currentSecID_ = other.currentSecID_;
      hasCST_ = other.hasCST_;
      cSTID_ = other.cSTID_;
      leftGuideLockStatus_ = other.leftGuideLockStatus_;
      rightGuideLockStatus_ = other.rightGuideLockStatus_;
      secDistance_ = other.secDistance_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ID_134_TRANS_EVENT_REP Clone() {
      return new ID_134_TRANS_EVENT_REP(this);
    }

    /// <summary>Field number for the "EventType" field.</summary>
    public const int EventTypeFieldNumber = 1;
    private global::com.mirle.iibg3k0.ids.ProtocolFormat.OHTMessage.EventType eventType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::com.mirle.iibg3k0.ids.ProtocolFormat.OHTMessage.EventType EventType {
      get { return eventType_; }
      set {
        eventType_ = value;
      }
    }

    /// <summary>Field number for the "CurrentAdrID" field.</summary>
    public const int CurrentAdrIDFieldNumber = 2;
    private string currentAdrID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrentAdrID {
      get { return currentAdrID_; }
      set {
        currentAdrID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CurrentSecID" field.</summary>
    public const int CurrentSecIDFieldNumber = 3;
    private string currentSecID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrentSecID {
      get { return currentSecID_; }
      set {
        currentSecID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HasCST" field.</summary>
    public const int HasCSTFieldNumber = 4;
    private global::com.mirle.iibg3k0.ids.ProtocolFormat.OHTMessage.VhLoadCSTStatus hasCST_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::com.mirle.iibg3k0.ids.ProtocolFormat.OHTMessage.VhLoadCSTStatus HasCST {
      get { return hasCST_; }
      set {
        hasCST_ = value;
      }
    }

    /// <summary>Field number for the "CST_ID" field.</summary>
    public const int CSTIDFieldNumber = 5;
    private string cSTID_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CSTID {
      get { return cSTID_; }
      set {
        cSTID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LeftGuideLockStatus" field.</summary>
    public const int LeftGuideLockStatusFieldNumber = 6;
    private global::com.mirle.iibg3k0.ids.ProtocolFormat.OHTMessage.VhGuideStatus leftGuideLockStatus_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::com.mirle.iibg3k0.ids.ProtocolFormat.OHTMessage.VhGuideStatus LeftGuideLockStatus {
      get { return leftGuideLockStatus_; }
      set {
        leftGuideLockStatus_ = value;
      }
    }

    /// <summary>Field number for the "RightGuideLockStatus" field.</summary>
    public const int RightGuideLockStatusFieldNumber = 7;
    private global::com.mirle.iibg3k0.ids.ProtocolFormat.OHTMessage.VhGuideStatus rightGuideLockStatus_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::com.mirle.iibg3k0.ids.ProtocolFormat.OHTMessage.VhGuideStatus RightGuideLockStatus {
      get { return rightGuideLockStatus_; }
      set {
        rightGuideLockStatus_ = value;
      }
    }

    /// <summary>Field number for the "Sec_Distance" field.</summary>
    public const int SecDistanceFieldNumber = 8;
    private int secDistance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SecDistance {
      get { return secDistance_; }
      set {
        secDistance_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ID_134_TRANS_EVENT_REP);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ID_134_TRANS_EVENT_REP other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EventType != other.EventType) return false;
      if (CurrentAdrID != other.CurrentAdrID) return false;
      if (CurrentSecID != other.CurrentSecID) return false;
      if (HasCST != other.HasCST) return false;
      if (CSTID != other.CSTID) return false;
      if (LeftGuideLockStatus != other.LeftGuideLockStatus) return false;
      if (RightGuideLockStatus != other.RightGuideLockStatus) return false;
      if (SecDistance != other.SecDistance) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EventType != 0) hash ^= EventType.GetHashCode();
      if (CurrentAdrID.Length != 0) hash ^= CurrentAdrID.GetHashCode();
      if (CurrentSecID.Length != 0) hash ^= CurrentSecID.GetHashCode();
      if (HasCST != 0) hash ^= HasCST.GetHashCode();
      if (CSTID.Length != 0) hash ^= CSTID.GetHashCode();
      if (LeftGuideLockStatus != 0) hash ^= LeftGuideLockStatus.GetHashCode();
      if (RightGuideLockStatus != 0) hash ^= RightGuideLockStatus.GetHashCode();
      if (SecDistance != 0) hash ^= SecDistance.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EventType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) EventType);
      }
      if (CurrentAdrID.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CurrentAdrID);
      }
      if (CurrentSecID.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CurrentSecID);
      }
      if (HasCST != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) HasCST);
      }
      if (CSTID.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CSTID);
      }
      if (LeftGuideLockStatus != 0) {
        output.WriteRawTag(48);
        output.WriteEnum((int) LeftGuideLockStatus);
      }
      if (RightGuideLockStatus != 0) {
        output.WriteRawTag(56);
        output.WriteEnum((int) RightGuideLockStatus);
      }
      if (SecDistance != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(SecDistance);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EventType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EventType);
      }
      if (CurrentAdrID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurrentAdrID);
      }
      if (CurrentSecID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurrentSecID);
      }
      if (HasCST != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) HasCST);
      }
      if (CSTID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CSTID);
      }
      if (LeftGuideLockStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LeftGuideLockStatus);
      }
      if (RightGuideLockStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) RightGuideLockStatus);
      }
      if (SecDistance != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SecDistance);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ID_134_TRANS_EVENT_REP other) {
      if (other == null) {
        return;
      }
      if (other.EventType != 0) {
        EventType = other.EventType;
      }
      if (other.CurrentAdrID.Length != 0) {
        CurrentAdrID = other.CurrentAdrID;
      }
      if (other.CurrentSecID.Length != 0) {
        CurrentSecID = other.CurrentSecID;
      }
      if (other.HasCST != 0) {
        HasCST = other.HasCST;
      }
      if (other.CSTID.Length != 0) {
        CSTID = other.CSTID;
      }
      if (other.LeftGuideLockStatus != 0) {
        LeftGuideLockStatus = other.LeftGuideLockStatus;
      }
      if (other.RightGuideLockStatus != 0) {
        RightGuideLockStatus = other.RightGuideLockStatus;
      }
      if (other.SecDistance != 0) {
        SecDistance = other.SecDistance;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            eventType_ = (global::com.mirle.iibg3k0.ids.ProtocolFormat.OHTMessage.EventType) input.ReadEnum();
            break;
          }
          case 18: {
            CurrentAdrID = input.ReadString();
            break;
          }
          case 26: {
            CurrentSecID = input.ReadString();
            break;
          }
          case 32: {
            hasCST_ = (global::com.mirle.iibg3k0.ids.ProtocolFormat.OHTMessage.VhLoadCSTStatus) input.ReadEnum();
            break;
          }
          case 42: {
            CSTID = input.ReadString();
            break;
          }
          case 48: {
            leftGuideLockStatus_ = (global::com.mirle.iibg3k0.ids.ProtocolFormat.OHTMessage.VhGuideStatus) input.ReadEnum();
            break;
          }
          case 56: {
            rightGuideLockStatus_ = (global::com.mirle.iibg3k0.ids.ProtocolFormat.OHTMessage.VhGuideStatus) input.ReadEnum();
            break;
          }
          case 64: {
            SecDistance = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code

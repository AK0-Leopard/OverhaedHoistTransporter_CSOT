<UserControl xmlns:Components1="clr-namespace:com.mirle.ibg3k0.ohxc.winform.UI.Components"  xmlns:Components="clr-namespace:WPF.Components"  xmlns:WPF_UserControl="clr-namespace:com.mirle.ibg3k0.ohxc.winform.UI.Components.WPF_UserControl" 
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:com.mirle.ibg3k0.ohxc.winform.UI.Components.SubPage" 
             xmlns:System="clr-namespace:System;assembly=mscorlib" xmlns:Tool="clr-namespace:com.mirle.ibg3k0.ohxc.winform.UI.Components.Tool" x:Class="com.mirle.ibg3k0.ohxc.winform.UI.Components.SubPage.uc_SP_VehicleManagement"
             mc:Ignorable="d" d:DesignHeight="721" d:DesignWidth="1464" FontFamily="MicrosoftSansSerif" FontSize="18" Foreground="#1b2338" Background="#f6f6f6">

    <UserControl.Resources>
        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="40" />
                </Grid.ColumnDefinitions>
                <Border Grid.Column="0" Background="White" BorderThickness="1,1,0,1" BorderBrush="#b2b2b2" />

                <Border Grid.Column="1" Background="White" BorderThickness="0,1,1,1" BorderBrush="#b2b2b2" Cursor="Hand"/>
                <Path x:Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Margin="12" Stretch="Fill" Fill="#005ba8" />
            </Grid>
        </ControlTemplate>
        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="250"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Foreground" Value="#1b2338"/>
            <Setter Property="FontFamily" Value="MicrosoftSansSerif"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <!-- ToggleButton 已数据绑定到 ComboBox 本身以切换 IsDropDownOpen -->
                            <ToggleButton Grid.Column="2" Template="{DynamicResource ComboBoxToggleButton}" x:Name="ToggleButton" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                            <ContentPresenter HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="ContentSite" VerticalAlignment="Center" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False"/>

                            <!-- 必须将 TextBox 命名为 PART_EditableTextBox，否则 ComboBox 将无法识别它 -->
                            <TextBox Visibility="Hidden" Template="{DynamicResource ComboBoxTextBox}" HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="PART_EditableTextBox" Style="{x:Null}" VerticalAlignment="Center" Focusable="True" Background="Transparent" IsReadOnly="{TemplateBinding IsReadOnly}"/>

                            <!-- Popup 可显示 ComboBox 中的项列表。IsOpen 已数据绑定到通过 ComboBoxToggleButton 来切换的 IsDropDownOpen -->
                            <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                                <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                    <Border x:Name="DropDownBorder" Background="{DynamicResource WindowBackgroundBrush}" BorderBrush="{DynamicResource SolidBorderBrush}" BorderThickness="1"/>
                                    <ScrollViewer Margin="4,6,4,6" Style="{DynamicResource SimpleScrollViewer}" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                        <!-- StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True -->
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Background="White"/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="False" />
            <!--<Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}" />-->
            <Setter Property="Height" Value="15"/>
            <Setter Property="Width" Value="15"/>
            <Setter Property="IsChecked" Value="{Binding IsChecked}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Margin" Value="17,0,0,0"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid>
                            <!--<Grid.ColumnDefinitions>
                                <ColumnDefinition Width="40"/>
                            </Grid.ColumnDefinitions>-->
                            <Grid Height="{TemplateBinding Height}" Width="{TemplateBinding Height}">
                                <Rectangle x:Name="CheckBoxRectangle" Fill="White"/>
                                <Rectangle x:Name="CheckBoxRectangleOut" Stroke="#707070" StrokeThickness="1"/>
                                <Grid x:Name="CheckedMark" Width="15" Height="15" Visibility="Collapsed">
                                    <Path SnapsToDevicePixels="False" StrokeThickness="2" Data="F1 M 0.468732,4.66838L 3.03345,7.95443L 7.28127,0.420569" Margin="4,2,0,0" Stroke="White"/>
                                </Grid>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckedMark" Property="Visibility" Value="Visible"></Setter>
                                <Setter TargetName="CheckBoxRectangle" Property="Fill" Value="#005ba8"></Setter>
                                <Setter TargetName="CheckBoxRectangle" Property="Opacity" Value="1"></Setter>
                                <Setter TargetName="CheckBoxRectangleOut" Property="Stroke" Value="Transparent"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="TextBlock" x:Key="TextBlock_Default">
            <!--<Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>-->
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Foreground" Value="#1b2338"/>
            <Setter Property="FontFamily" Value="MicrosoftSansSerif"/>
        </Style>
        <Style TargetType="{x:Type TextBox}" x:Key="TextBox_Default">
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="250"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Foreground" Value="#070022"/>
            <Setter Property="FontFamily" Value="MicrosoftSansSerif"/>
            <Setter Property="CharacterCasing" Value="Upper"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" Width="auto" Height="auto" BorderThickness="1" BorderBrush="#adadad">
                            <Grid x:Name="grid" Background="White">
                                <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="TextBlock" x:Key="Title_18px">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Foreground" Value="#070022"/>
            <Setter Property="Padding" Value="0,13,10,12"/>
            <Setter Property="Height" Value="46"/>
            <Setter Property="Width" Value="165"/>
            <Setter Property="TextAlignment" Value="Right"/>
        </Style>
        <Style TargetType="TextBlock" x:Key="ContentTitle_18px" BasedOn="{StaticResource TextBlock_Default}">
            <Setter Property="Background" Value="#e6e6e6"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Foreground" Value="#070022"/>
            <Setter Property="Padding" Value="0,5,0,0"/>
        </Style>
        <Style TargetType="{x:Type TabControl}" x:Key="TabStripPlacement_Default">

            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="BorderThickness" Value="0,6,0,0"/>
            <Setter Property="BorderBrush" Value="#005ba8"/>
            <Setter Property="Background" Value="#e6e6e6"/>
            <Setter Property="Padding" Value="3,3,3,3"/>
        </Style>
        <Style TargetType="{x:Type TabItem}" x:Key="TabItemStyle_Default">
            <Setter Property="Margin" Value="-5,0,5,0"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Width" Value="204"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border x:Name="Border">
                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="10,2"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#005ba8" />
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="White" />
                                <Setter Property="Foreground" Value="#1b2338"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Width" Value="150"/>
            <Setter Property="Height" Value="33"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="#005ba8"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="ButtonBorder" CornerRadius="5" BorderThickness="0,0,0,3">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="#003366"/>
                            </Border.BorderBrush>
                            <Border.Background>
                                <LinearGradientBrush>
                                    <GradientStop Color="#005ba8" Offset="0" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" TextElement.FontWeight="Normal"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="ButtonBorder" Value="#008aff"/>
                                <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="#003366"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="ButtonBorder" Property="Background" Value="#b2b2b2" />
                                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="Transparent" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border x:Name="Border">
                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="10,2"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#005ba8" />
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="white" />
                                <Setter Property="Foreground" Value="#1b2338"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Bottom"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Padding" Value="10,4,4,7" />
            <Setter Property="Background" Value="#bed0df"/>
            <Setter Property="Foreground" Value="#1b2338"/>
            <Setter Property="FontSize" Value="10.5pt"/>
            <Setter Property="BorderBrush" Value="#e6e6e6"/>
            <Setter Property="BorderThickness"  Value="0,0,1,1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Grid Name="HedearGrid" Background="#bed0df" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="BackgroundBorder" BorderThickness="0,1,1,1" BorderBrush="#e6e6e6" Grid.ColumnSpan="2" />
                            <ContentPresenter  Margin="6,3,6,3" VerticalAlignment="Center" Grid.Column="0" />
                            <Path x:Name="SortArrow" Visibility="Collapsed" Data="M0,0 L1,0 0.5,1 z" Stretch="Fill" 
                            Grid.Column="1" Width="8" Height="6" Fill="#1b2338" Margin="0,0,8,0" 
                            VerticalAlignment="Center" RenderTransformOrigin="0.5,0.4" />
                            <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Cursor="SizeWE" Grid.Column="1" >
                                <Thumb.Style>
                                    <Style TargetType="{x:Type Thumb}">
                                        <Setter Property="Width" Value="2" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                    <Border Background="Transparent"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Thumb.Style>
                            </Thumb>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="SortDirection" Value="Ascending">
                                <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                                <Setter TargetName="SortArrow" Property="RenderTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="SortDirection" Value="Descending">
                                <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="DataGridStyle" TargetType="{x:Type DataGrid}">
            <Setter Property="ColumnHeaderStyle" Value="{DynamicResource ColumnHeaderStyle}"/>
            <Setter Property="BorderBrush" Value="#e6e6e6" />
            <Setter Property="HorizontalGridLinesBrush" Value="#e6e6e6"/>
            <Setter Property="VerticalGridLinesBrush" Value="#e6e6e6"/>
        </Style>


    </UserControl.Resources>

    <Grid>
        <TabControl HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderThickness="0,6,0,0" BorderBrush="#005ba8" Background="#e6e6e6" Padding="5,5,5,5">
            <TabItem Header="Vehicle Management" Width="204" Height="35" Margin="-2,0,2,0">
                <DockPanel Background="#f6f6f6">
                    <StackPanel Width="220" Margin="13,15,0,15" HorizontalAlignment="Left">
                        <TextBlock Style="{StaticResource ContentTitle_18px}" Height="30" VerticalAlignment="Top" Margin="0,0,0,10" Text="Vehicle Link Status"/>
                        <StackPanel Height="598" Background="#eeeeee">
                            <Components:uc_DeviceStatusSignal x:Name="uc_VhLk_Status_1" Margin="0,10,0,0"/>
                            <Components:uc_DeviceStatusSignal x:Name="uc_VhLk_Status_2" Margin="0,10,0,0"/>
                            <Components:uc_DeviceStatusSignal x:Name="uc_VhLk_Status_3" Margin="0,10,0,0"/>
                            <Components:uc_DeviceStatusSignal x:Name="uc_VhLk_Status_4" Margin="0,10,0,0"/>
                            <Components:uc_DeviceStatusSignal x:Name="uc_VhLk_Status_5" Margin="0,10,0,0"/>
                            <Components:uc_DeviceStatusSignal x:Name="uc_VhLk_Status_6" Margin="0,10,0,0"/>
                            <Components:uc_DeviceStatusSignal x:Name="uc_VhLk_Status_7" Margin="0,10,0,0"/>
                            <Components:uc_DeviceStatusSignal x:Name="uc_VhLk_Status_8" Margin="0,10,0,0"/>
                            <Components:uc_DeviceStatusSignal x:Name="uc_VhLk_Status_9" Margin="0,10,0,0"/>
                            <Components:uc_DeviceStatusSignal x:Name="uc_VhLk_Status_10" Margin="0,10,0,0"/>
                            <Components:uc_DeviceStatusSignal x:Name="uc_VhLk_Status_11" Margin="0,10,0,0"/>
                            <Components:uc_DeviceStatusSignal x:Name="uc_VhLk_Status_12" Margin="0,10,0,0"/>
                            <Components:uc_DeviceStatusSignal x:Name="uc_VhLk_Status_13" Margin="0,10,0,0"/>
                            <Components:uc_DeviceStatusSignal x:Name="uc_VhLk_Status_14" Margin="0,10,0,0"/>
                        </StackPanel>
                    </StackPanel>
                    <WrapPanel Width="1196" Margin="25,15,13,15">
                        <TextBlock Width="1183" Height="30" Style="{StaticResource ContentTitle_18px}" Text="Vehicle Setting"/>
                        <DockPanel Width="1196" Height="55" Background="#eeeeee" Margin="0,10,0,0" RenderTransformOrigin="0.5,0.5">
                            <DockPanel.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform AngleY="-0.04"/>
                                    <RotateTransform/>
                                    <TranslateTransform Y="-0.416"/>
                                </TransformGroup>
                            </DockPanel.RenderTransform>
                            <WPF_UserControl:uc_TextBlockAndComboBox_H x:Name="VehicleID" Height="30"/>
                            <Button Name="btn_VhReset" Content="Vehicle Reset" HorizontalAlignment="Right" Margin="0,0,31,0" Click="btn_VhReset_Click"/>
                        </DockPanel>
                        <WPF_UserControl:uc_VhSettingS1 Margin="0,5,11,15" Height="240" x:Name="VehicleStatus"/>
                        <WPF_UserControl:uc_VhSettingS1 Margin="0,5,0,15"  Height="240" x:Name="CommandStatus" Width="595"/>
                        <WPF_UserControl:uc_VhSettingS2 Margin="0,0,11,30" Height="281" x:Name="PauseType" />
                        <WPF_UserControl:uc_VhSettingS3 Margin="0,0,0,30" Height="281" x:Name="VehicleCommand" Width="595"/>
                    </WrapPanel>
                </DockPanel>

            </TabItem>
            <TabItem Header="Alarm Information" Width="204" Height="35" Margin="5,0,-5,0">
                <Grid Background="#f6f6f6">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="87"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <DockPanel Grid.Row="0" Grid.Column="0">
                        <Border Width="24"/>
                        <TextBlock DockPanel.Dock="Left" Padding="0,0,10,0" TextAlignment="Center" VerticalAlignment ="Center" Foreground="#1b2338" ><Run Text="Alarm Count : "/></TextBlock>
                        <TextBlock x:Name="txb_AlarmCnt" DockPanel.Dock="Left" Padding="0,0,10,0" TextAlignment="Center" VerticalAlignment ="Center" Foreground="#1b2338" ><Run Text="Value"/></TextBlock>
                        <Border Width="56"/>

                        <Button Name="btn_reset" Content="Alarm Reset" Click="btn_Click"/>
                        <Border Width="auto"/>
                    </DockPanel>
                    <DockPanel Grid.Row="1" Grid.Column="0">
                        <DataGrid x:Name="alarmlist" ItemsSource="{Binding}" FontSize="14" BorderThickness="0,1,0,0" BorderBrush="#e6e6e6" Margin="0,6,0,0" RowDetailsVisibilityMode="Collapsed" SelectionMode="Single" AlternationCount="2" Style="{DynamicResource DataGridStyle}"
                                  IsReadOnly="True" AutoGenerateColumns="False" CanUserAddRows="False" CanUserSortColumns="True">
                            <DataGrid.CellStyle>
                                <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                                <Grid Background="{TemplateBinding Background}">
                                                    <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"></ContentPresenter>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Foreground" Value="White"/>
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="#005BA8"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Foreground" Value="White"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#005BA8"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.CellStyle>
                            <DataGrid.RowStyle>
                                <Style TargetType="{x:Type DataGridRow}">
                                    <Style.Triggers>
                                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                            <Setter Property="Background" Value="White" />
                                            <Setter Property="Foreground" Value="#1b2338" />
                                        </Trigger>
                                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                            <Setter Property="Background" Value="#f2f9ff" />
                                            <Setter Property="Foreground" Value="#1b2338" />
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="#005BA8"/>
                                            <Setter Property="Foreground" Value="White"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#005BA8"/>
                                            <Setter Property="Foreground" Value="White"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowStyle>
                            <DataGrid.Columns>
                                <!--<DataGridTextColumn ElementStyle="{StaticResource ColumnElementStyle}" Binding="{Binding CLEAR_DATE_TIME}"  Width="185" Header="Create Time"/>
                                <DataGridTextColumn ElementStyle="{StaticResource ColumnElementStyle}" Binding="{Binding EQPT_ID}" Width="100" Header="Vehicle ID"/>
                                <DataGridTextColumn ElementStyle="{StaticResource ColumnElementStyle}" Binding="{Binding ALAM_CODE}" Width="100" Header="Alarm ID"/>
                                <DataGridTextColumn ElementStyle="{StaticResource ColumnElementStyle}" Binding="{Binding ALAM_DESC}" Width="*" Header="Description"/>
                                <DataGridTextColumn ElementStyle="{StaticResource ColumnElementStyle}" Binding="{Binding ALAM_LVL}" Width="100" Header="Level"/>
                                <DataGridTextColumn ElementStyle="{StaticResource ColumnElementStyle}" Binding="{Binding ALAM_STAT}" Width="100" Header="Alarm Type"/>
                                -->
                                <DataGridTextColumn Binding="{Binding RPT_DATE_TIME}"  Width="185" Header="Create Time"/>
                                <DataGridTextColumn Binding="{Binding EQPT_ID}" Width="100" Header="Vehicle ID"/>
                                <DataGridTextColumn Binding="{Binding ALAM_CODE}" Width="100" Header="Alarm ID"/>
                                <DataGridTextColumn Binding="{Binding ALAM_DESC}" Width="*" Header="Description"/>
                                <DataGridTextColumn Binding="{Binding ALAM_LVL}" Width="100" Header="Level"/>
                                <DataGridTextColumn Binding="{Binding ALAM_STAT}" Width="100" Header="Alarm Type"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </DockPanel>
                </Grid>
            </TabItem>
            <TabItem Header="Communication Log" Width="204" Height="35" Margin="5,0,-5,0">
                <Grid Background="#f6f6f6">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="128"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="92"/>
                            <RowDefinition Height="36"/>
                        </Grid.RowDefinitions>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="350"/>
                                <ColumnDefinition Width="25"/>
                                <ColumnDefinition Width="415"/>
                                <ColumnDefinition Width="25"/>
                                <ColumnDefinition Width="415"/>
                                <ColumnDefinition Width="50"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <WrapPanel>
                                <DockPanel x:Name="DockPanel1" Height="46" Width="350">
                                    <TextBlock x:Name="TitleName1" Style="{StaticResource Title_18px}" Width="100" Text="Start Time"/>
                                    <!--<DatePicker x:Name="StartDTCbx"></DatePicker>-->
                                    <xctk:DateTimePicker x:Name="m_StartDTCbx" Format="Custom" FormatString="yyyy-MM-dd HH:mm:ss" CultureInfo="en-US" TimeFormat="Custom" TimeFormatString="HH:mm:ss" TextAlignment="Left"
                                        Grid.Row="0" Value="{Binding Path=CleanLogsDeletionDate, Mode=TwoWay}" Height="30" Width="250" CurrentDateTimePart="Day"/>
                                </DockPanel>
                                <DockPanel x:Name="DockPanel2" Height="46" Width="350">
                                    <TextBlock x:Name="TitleName2" Style="{StaticResource Title_18px}" Width="100" Text="End Time"/>
                                    <xctk:DateTimePicker x:Name="m_EndDTCbx" Format="Custom" FormatString="yyyy-MM-dd HH:mm:ss" CultureInfo="en-US" TimeFormat="Custom" TimeFormatString="HH:mm:ss" TextAlignment="Left"
                                         Grid.Row="0" Value="{Binding Path=CleanLogsDeletionDate, Mode=TwoWay}" Height="30" Width="250" />
                                </DockPanel>
                            </WrapPanel>
                            <WrapPanel Grid.Column="2">
                                <DockPanel x:Name="DockPanel3" Width="415" Height="46">
                                    <TextBlock Style="{StaticResource Title_18px}" Text="MCS Command ID"/>
                                    <TextBox x:Name="CommunLog_MCSCmdID" Style="{StaticResource TextBox_Default}"></TextBox>
                                </DockPanel>
                                <DockPanel x:Name="DockPanel4" Width="415" Height="46">
                                    <TextBlock Style="{StaticResource Title_18px}" Text="Vehicle ID"/>
                                    <TextBox x:Name="CommunLog_VhID" Style="{StaticResource TextBox_Default}"></TextBox>
                                </DockPanel>
                            </WrapPanel>
                            <WrapPanel Grid.Column="4">
                                <DockPanel x:Name="DockPanel5" Width="415" Height="46">
                                    <TextBlock Style="{StaticResource Title_18px}" Text="Every Hour Interval"/>
                                    <ComboBox x:Name="cb_HrsInterval" SelectionChanged="cb_HrsInterval_SelectionChanged"/>
                                </DockPanel>
                            </WrapPanel>
                            <Button Grid.Column="6" Name="btn_Search" Content="Search" Margin="-34,-46,0,0" IsDefault="True" Click="btn_Search_Click"/>
                        </Grid>
                        <WrapPanel Grid.Row="0" Margin="-2,-4,2,4">

                            <!--<DockPanel x:Name="DockPanel2" Width="350" Height="46" Margin="0,0,25,0">
                <TextBlock x:Name="TitleName2" Style="{StaticResource Title_18px}" Width="90" Text="End Time"/>
                <DatePicker x:Name="m_EndDTCbx"/>
            </DockPanel>-->
                            <!--<DockPanel x:Name="DockPanel3" Width="415" Height="46" Margin="0,0,50,0">
                <TextBlock x:Name="TitleName3" Style="{StaticResource Title_18px}" Text="Every Hour Interval"/>
                <ComboBox x:Name="cb_HrsInterval"/>
            </DockPanel>
            <Button Name="btn_Search" Content="Search"/>
            <DockPanel x:Name="DockPanel4" Width="415" Height="46" Margin="0,0,25,0">
                <TextBlock x:Name="TitleName4" Style="{StaticResource Title_18px}" Text="TitleName"/>
                <TextBox x:Name="TextBox4" Style="{StaticResource TextBox_Default}"></TextBox>
            </DockPanel>
            <DockPanel x:Name="DockPanel5" Width="350" Height="46" Margin="0,0,25,0">
                <TextBlock x:Name="TitleName5" Style="{StaticResource Title_18px}" Width="90" Text="TitleName"/>
                <TextBox x:Name="TextBox5" Style="{StaticResource TextBox_Default}"></TextBox>
            </DockPanel>
            <DockPanel x:Name="DockPanel6" Width="415" Height="46" Margin="0,0,25,0">
                <TextBlock x:Name="TitleName6" Style="{StaticResource Title_18px}" Text="TitleName"/>
                <TextBox x:Name="TextBox6" Style="{StaticResource TextBox_Default}"></TextBox>
            </DockPanel>-->
                        </WrapPanel>
                        <DockPanel Grid.Row="1" Margin="10,9,0,0">
                            <TextBlock Margin="0,0,20,0"><Hyperlink x:Name="HypL30mins"  Click="Button_Click">Last 30 minutes</Hyperlink></TextBlock>
                            <TextBlock Margin="0,0,20,0"><Hyperlink x:Name="HypL1hours"  Click="Button_Click">Last 1 hour</Hyperlink></TextBlock>
                            <TextBlock Margin="0,0,20,0"><Hyperlink x:Name="HypL4hours"  Click="Button_Click">Last 4 hour</Hyperlink></TextBlock>
                            <TextBlock Margin="0,0,20,0"><Hyperlink x:Name="HypL12hours" Click="Button_Click">Last 12 hour</Hyperlink></TextBlock>
                            <TextBlock Margin="0,0,20,0"><Hyperlink x:Name="HypL24hours" Click="Button_Click">Last 24 hour</Hyperlink></TextBlock>
                            <TextBlock Margin="0,0,20,0"><Hyperlink x:Name="HypL2days"   Click="Button_Click">Last 2 days</Hyperlink></TextBlock>
                            <TextBlock Margin="0,0,20,0"><Hyperlink x:Name="HypL3days"   Click="Button_Click">Last 3 days</Hyperlink></TextBlock>
                            <Border/>
                        </DockPanel>
                    </Grid>
                    <Components1:uctl_ElasticQuery_System_Process x:Name="uctl_ElasticQuery_sys_process_log" Grid.Row="1"/>
                    <!--<Components:uctl_ElasticQuery_System_Process x:Name="uctl_ElasticQuery_sys_process_log" Grid.Row="1"/>-->
                </Grid>
                <!--<Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="128"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Components1:uc_TitleContent x:Name="uc_TitleContent"/>
                    <Components1:uctl_ElasticQuery_System_Process x:Name="uctl_ElasticQuery_System_Process" Grid.Row="1"/>
                </Grid>-->
            </TabItem>
        </TabControl>
        <!--<Components1:uc_TitleContent x:Name="uc_TitleContent"/>
                    <Components1:uctl_ElasticQuery_System_Process x:Name="uctl_ElasticQuery_System_Process" Grid.Row="1"/>
                </Grid>
            </TabItem>
        </TabControl>-->
        <!--<TabControl Style="{StaticResource TabStripPlacement_Default}" Grid.Column="1">
            <TabItem Style="{StaticResource TabItemStyle_Default}" Header="Port List" Width="204" Height="35" Margin="-2,0,2,0">
                <Grid Background="#f6f6f6">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="87"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <DockPanel Grid.Row="0" Grid.Column="0">
                        <TextBlock Style="{StaticResource TextBlock_Default}" Padding="24,0,10,0" VerticalAlignment="Center" DockPanel.Dock="Left"><Run Text="Port ID"/></TextBlock>
                        <ComboBox x:Name="cmdPortID" Width="250" Height="30" DisplayMemberPath="PORT_ID">
                            <TextBlock>Port ID</TextBlock>
                        </ComboBox>
                        <TextBlock Style="{StaticResource TextBlock_Default}" Padding="77,0,10,0" VerticalAlignment ="Center" DockPanel.Dock="Left"><Run Text="Priority"/></TextBlock>
                        <Border  Width="250" Height="30">
                            <Tool:NumericUpDown x:Name="numPrority"/>
                        </Border>
                        <Border Width="50"/>
                        <Button Content="Set"/>
                        <Border Width="auto"/>
                    </DockPanel>
                    <DockPanel Grid.Row="1" Grid.Column="0">
                        <DataGrid x:Name="allPortList" FontSize="14" BorderThickness="0,3,0,0" BorderBrush="#e6e6e6" RowDetailsVisibilityMode="Collapsed" SelectionMode="Single" AlternationCount="2" Style="{DynamicResource DataGridStyle}"
                                  IsReadOnly="True" AutoGenerateColumns="False" CanUserAddRows="False" SelectedCellsChanged="allPortList_SelectedCellsChanged">
                            <DataGrid.Columns>
                                <DataGridTextColumn Width="*" Binding="{Binding PORT_TYPE}" Header="Port Type"/>
                                <DataGridTextColumn Width="*" Binding="{Binding PORT_ID}" Header="Port ID"/>
                                <DataGridTextColumn Width="*" Binding="{Binding CST_ID}" Header="CST ID"/>
                                <DataGridTextColumn Width="*" Binding="{Binding STATUS}" Header="Status"/>
                                <DataGridTextColumn Width="*" Binding="{Binding PORT_STATUS}" Header="Event Type"/>
                                <DataGridTextColumn Width="*" Binding="{Binding PRIORITY}" Header="Priority"/>
                                <DataGridTextColumn Width="*" Binding="{Binding ALARM_STATUS}" Header="Alarm Status"/>
                                <DataGridTextColumn Width="*" Binding="{Binding ADR_ID}" Header="Address ID"/>
                                <DataGridTextColumn Width="*" Binding="{Binding UP_DATE_TIME}" Header="Update Time"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </DockPanel>
                </Grid>

            </TabItem>
            <TabItem Style="{StaticResource TabItemStyle_Default}" Header="EQ Port List" Width="204" Height="35" Margin="5,0,-5,0">
                <Grid Background="#f6f6f6">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="87"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <DockPanel Grid.Row="0" Grid.Column="0">
                        <TextBlock Style="{StaticResource TextBlock_Default}" Padding="24,0,10,0" VerticalAlignment="Center" DockPanel.Dock="Left"><Run Text="Port ID"/></TextBlock>
                        <ComboBox x:Name="cmdEqPortID" Width="250" Height="30" DisplayMemberPath="PORT_ID">
                            <TextBlock>Port ID</TextBlock>
                        </ComboBox>
                        <Border Width="50"/>
                        <Button Content="Enable"/>
                        <Border Width="5"/>
                        <Button Content="Disable"/>
                        <Border Width="2" Height="46" Background="#b2b2b2" Margin="5,0,5,0"/>
                        <Button Content="Load Request"/>
                        <Border Width="5"/>
                        <Button Content="Unload Request"/>
                        <Border Width="2" Height="46" Background="#b2b2b2" Margin="5,0,5,0"/>
                        <Button Content="Wait"/>
                        <Border Width="auto"/>
                    </DockPanel>
                    <DockPanel Grid.Row="1" Grid.Column="0">
                        <DataGrid x:Name="eqPortList" FontSize="14" BorderThickness="0,3,0,0" BorderBrush="#e6e6e6" RowDetailsVisibilityMode="Collapsed" SelectionMode="Single" AlternationCount="2" Style="{DynamicResource DataGridStyle}" 
                                   IsReadOnly="True" AutoGenerateColumns="False" CanUserAddRows="False" SelectedCellsChanged="eqPortList_SelectedCellsChanged">
                            <DataGrid.RowStyle>
                                <Style TargetType="{x:Type DataGridRow}">
                                    <Style.Triggers>
                                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                            <Setter Property="Background" Value="White" />
                                            <Setter Property="Foreground" Value="#1b2338" />
                                        </Trigger>
                                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                            <Setter Property="Background" Value="#f2f9ff" />
                                            <Setter Property="Foreground" Value="#1b2338" />
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="#bed0df"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#bed0df"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowStyle>

                            <DataGrid.Columns>
                                <DataGridCheckBoxColumn Width="20" Binding="{x:Null}" ClipboardContentBinding="{x:Null}"/>
                                <DataGridTextColumn Width="*" Binding="{Binding PORT_ID}" Header="Port ID"/>
                                <DataGridTextColumn Width="*" Binding="{Binding CST_ID}" Header="CST ID"/>
                                <DataGridTextColumn Width="*" Binding="{Binding STATUS}" Header="Status"/>
                                <DataGridTextColumn Width="*" Binding="{Binding PORT_STATUS}" Header="Event Type"/>
                                <DataGridTextColumn Width="*" Binding="{Binding PRIORITY}" Header="Priority"/>
                                <DataGridTextColumn Width="*" Binding="{Binding ALARM_STATUS}" Header="Alarm Status"/>
                                <DataGridTextColumn Width="*" Binding="{Binding ADR_ID}" Header="Address ID"/>
                                <DataGridTextColumn Width="*" Binding="{Binding UP_DATE_TIME}" Header="Update Time"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </DockPanel>
                </Grid>
            </TabItem>
        </TabControl>-->

    </Grid>
</UserControl>

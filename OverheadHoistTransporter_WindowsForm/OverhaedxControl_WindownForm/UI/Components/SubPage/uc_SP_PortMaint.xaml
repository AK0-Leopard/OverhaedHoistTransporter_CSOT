<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:com.mirle.ibg3k0.ohxc.winform.UI.Components.SubPage" 
             xmlns:System="clr-namespace:System;assembly=mscorlib" xmlns:Tool="clr-namespace:com.mirle.ibg3k0.ohxc.winform.UI.Components.Tool" x:Class="com.mirle.ibg3k0.ohxc.winform.UI.Components.SubPage.uc_SP_PortMaint"
             mc:Ignorable="d" 
             d:DesignHeight="721" d:DesignWidth="1464" FontFamily="MicrosoftSansSerif" FontSize="18" Foreground="#1b2338" Background="#f6f6f6">

    <UserControl.Resources>
        <local:EnumConverter x:Key="enumConverter"/>
        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="40" />
                </Grid.ColumnDefinitions>
                <Border Grid.Column="0" Background="White" BorderThickness="1,1,0,1" BorderBrush="#b2b2b2" />

                <Border Grid.Column="1" Background="White" BorderThickness="0,1,1,1" BorderBrush="#b2b2b2" Cursor="Hand"/>
                <Path x:Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Margin="12" Stretch="Fill" Fill="#005ba8" />
            </Grid>
        </ControlTemplate>
        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <!-- ToggleButton 已数据绑定到 ComboBox 本身以切换 IsDropDownOpen -->
                            <ToggleButton Grid.Column="2" Template="{DynamicResource ComboBoxToggleButton}" x:Name="ToggleButton" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                            <ContentPresenter HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="ContentSite" VerticalAlignment="Center" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False"/>

                            <!-- 必须将 TextBox 命名为 PART_EditableTextBox，否则 ComboBox 将无法识别它 -->
                            <TextBox Visibility="Hidden" Template="{DynamicResource ComboBoxTextBox}" HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="PART_EditableTextBox" Style="{x:Null}" VerticalAlignment="Center" Focusable="True" Background="Transparent" IsReadOnly="{TemplateBinding IsReadOnly}"/>

                            <!-- Popup 可显示 ComboBox 中的项列表。IsOpen 已数据绑定到通过 ComboBoxToggleButton 来切换的 IsDropDownOpen -->
                            <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                                <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                    <Border x:Name="DropDownBorder" Background="{DynamicResource WindowBackgroundBrush}" BorderBrush="{DynamicResource SolidBorderBrush}" BorderThickness="1"/>
                                    <ScrollViewer Margin="4,6,4,6" Style="{DynamicResource SimpleScrollViewer}" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                        <!-- StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True -->
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Background="White"/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="False" />
            <!--<Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}" />-->
            <Setter Property="Height" Value="15"/>
            <Setter Property="Width" Value="15"/>
            <Setter Property="IsChecked" Value="{Binding IsChecked}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Margin" Value="17,0,0,0"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid>
                            <!--<Grid.ColumnDefinitions>
                                <ColumnDefinition Width="40"/>
                            </Grid.ColumnDefinitions>-->
                            <Grid Height="{TemplateBinding Height}" Width="{TemplateBinding Height}">
                                <Rectangle x:Name="CheckBoxRectangle" Fill="White"/>
                                <Rectangle x:Name="CheckBoxRectangleOut" Stroke="#707070" StrokeThickness="1"/>
                                <Grid x:Name="CheckedMark" Width="15" Height="15" Visibility="Collapsed">
                                    <Path SnapsToDevicePixels="False" StrokeThickness="2" Data="F1 M 0.468732,4.66838L 3.03345,7.95443L 7.28127,0.420569" Margin="4,2,0,0" Stroke="White"/>
                                </Grid>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckedMark" Property="Visibility" Value="Visible"></Setter>
                                <Setter TargetName="CheckBoxRectangle" Property="Fill" Value="#005ba8"></Setter>
                                <Setter TargetName="CheckBoxRectangle" Property="Opacity" Value="1"></Setter>
                                <Setter TargetName="CheckBoxRectangleOut" Property="Stroke" Value="Transparent"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="TextBlock" x:Key="TextBlock_Default">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Foreground" Value="#1b2338"/>
            <Setter Property="FontFamily" Value="MicrosoftSansSerif"/>
        </Style>
        <Style TargetType="{x:Type TabControl}" x:Key="TabStripPlacement_Default">

            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="BorderThickness" Value="0,6,0,0"/>
            <Setter Property="BorderBrush" Value="#005ba8"/>
            <Setter Property="Background" Value="#e6e6e6"/>
            <Setter Property="Padding" Value="3,3,3,3"/>
        </Style>
        <Style TargetType="{x:Type TabItem}" x:Key="TabItemStyle_Default">
            <Setter Property="Margin" Value="-5,0,5,0"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Width" Value="204"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border x:Name="Border">
                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="10,2"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#005ba8" />
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="White" />
                                <Setter Property="Foreground" Value="#1b2338"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Width" Value="150"/>
            <Setter Property="Height" Value="33"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="#005ba8"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="ButtonBorder" CornerRadius="5" BorderThickness="0,0,0,3">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="#003366"/>
                            </Border.BorderBrush>
                            <Border.Background>
                                <LinearGradientBrush>
                                    <GradientStop Color="#005ba8" Offset="0" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" TextElement.FontWeight="Normal"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="ButtonBorder" Value="#008aff"/>
                                <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="#003366"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="ButtonBorder" Property="Background" Value="#b2b2b2" />
                                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="Transparent" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border x:Name="Border">
                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="10,2"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#005ba8" />
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="white" />
                                <Setter Property="Foreground" Value="#1b2338"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- DataGridColumnHeader style -->
        <Style x:Key="ColumnHeaderStyle1" TargetType="DataGridColumnHeader">
            <Setter Property="Height" Value="30"/>
            <Setter Property="Foreground" Value="#1b2338"/>
            <Setter Property="FontSize" Value="10.5pt"/>
            <Setter Property="BorderBrush" Value="#e6e6e6"/>
            <Setter Property="BorderThickness"  Value="0,1,1,1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Grid Name="HedearGrid" Background="#bed0df" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="BackgroundBorder" BorderThickness="0,0,1,1" BorderBrush="#e6e6e6" Grid.ColumnSpan="2" />
                            <ContentPresenter Margin="10,4,10,5" VerticalAlignment="Center" Grid.Column="0" />
                            <Path x:Name="SortArrow" Visibility="Collapsed" Data="M0,0 L1,0 0.5,1 z" Stretch="Fill" 
                            Grid.Column="1" Width="8" Height="6" Fill="#1b2338" Margin="0,0,8,0" 
                            VerticalAlignment="Center" RenderTransformOrigin="0.5,0.4" />
                            <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Cursor="SizeWE" Grid.Column="1" >
                                <Thumb.Style>
                                    <Style TargetType="{x:Type Thumb}">
                                        <Setter Property="Width" Value="2" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                    <Border Background="Transparent"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Thumb.Style>
                            </Thumb>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="SortDirection" Value="Ascending">
                                <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                                <Setter TargetName="SortArrow" Property="RenderTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="SortDirection" Value="Descending">
                                <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- DataGridColumnContent style -->
        <Style x:Key="ColumnElementStyle" TargetType="TextBlock">
            <Setter Property="Padding" Value="10,5,10,5" />
        </Style>

        <Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
            <Setter Property="FontSize" Value="14px"/>
            <Setter Property="ColumnHeaderStyle" Value="{DynamicResource ColumnHeaderStyle1}"/>
            <!--网格线颜色-->
            <Setter Property="BorderBrush" Value="#e6e6e6" />
            <Setter Property="HorizontalGridLinesBrush">
                <Setter.Value>
                    <SolidColorBrush Color="#e6e6e6"/>
                </Setter.Value>
            </Setter>
            <Setter Property="VerticalGridLinesBrush">
                <Setter.Value>
                    <SolidColorBrush Color="#e6e6e6"/>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid>
        <TabControl HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderThickness="0,6,0,0" BorderBrush="#005ba8" Background="#e6e6e6" Padding="5">
            <TabItem Header="Port List" Width="204" Height="35" Margin="-2,0,2,0">
                <Grid Background="#f6f6f6">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="87"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <DockPanel Grid.Row="0" Grid.Column="0">
                        <Border Width="24"/>
                        <TextBlock DockPanel.Dock="Left" Padding="0,0,10,0" TextAlignment="Center" VerticalAlignment ="Center" Foreground="#1b2338" ><Run Text="Port ID"/></TextBlock>
                        <ComboBox x:Name="cmdPortID" Width="250" Height="30" DisplayMemberPath="PORT_ID">
                        </ComboBox>
                        <Border Width="77"/>
                        <TextBlock DockPanel.Dock="Left" Padding="0,0,10,0" TextAlignment="Center" VerticalAlignment ="Center" Foreground="#1b2338" ><Run Text="Priority"/></TextBlock>
                        <Border  Width="250" Height="30">
                            <Tool:NumericUpDown x:Name="numPrority"/>
                        </Border>
                        <Border Width="50"/>
                        <Button Name="btn_set" Content="Set" Click="btn_Click"/>
                        <Border Width="auto"/>
                    </DockPanel>
                    <DockPanel Grid.Row="1" Grid.Column="0">
                        <DataGrid x:Name="allPortList" BorderThickness="0,1,0,0" BorderBrush="#e6e6e6" Margin="0,6,0,0" RowDetailsVisibilityMode="Collapsed" SelectionMode="Single" AlternationCount="2" Style="{DynamicResource DataGridStyle1}"
                                  IsReadOnly="True" AutoGenerateColumns="False" CanUserAddRows="False" SelectedCellsChanged="allPortList_SelectedCellsChanged" CanUserSortColumns="True">
                            <DataGrid.CellStyle>
                                <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                                <Grid Background="{TemplateBinding Background}">
                                                    <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"></ContentPresenter>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Foreground" Value="White"/>
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="#005BA8"/>
                                        </Trigger>
                                        <!--<Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Foreground" Value="White"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#005BA8"/>
                                        </Trigger>-->
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.CellStyle>
                            <DataGrid.RowStyle>
                                <Style TargetType="{x:Type DataGridRow}">
                                    <Style.Triggers>
                                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                            <Setter Property="Background" Value="White" />
                                            <Setter Property="Foreground" Value="#1b2338" />
                                        </Trigger>
                                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                            <Setter Property="Background" Value="#f2f9ff" />
                                            <Setter Property="Foreground" Value="#1b2338" />
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="#005BA8"/>
                                            <Setter Property="Foreground" Value="White"/>
                                        </Trigger>
                                        <!--<Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#005BA8"/>
                                            <Setter Property="Foreground" Value="White"/>
                                        </Trigger>-->
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowStyle>
                            <DataGrid.Columns>
                                <DataGridTextColumn ElementStyle="{StaticResource ColumnElementStyle}" Header="Sgement No."     Binding="{Binding RPT_DATE_TIME}" ></DataGridTextColumn>
                                <DataGridTextColumn ElementStyle="{StaticResource ColumnElementStyle}" Header="Status"    Binding="{Binding CLEAR_DATE_TIME}"></DataGridTextColumn>
                                <DataGridTextColumn ElementStyle="{StaticResource ColumnElementStyle}" Header="HID ID"      Binding="{Binding ALAM_STAT}"      ></DataGridTextColumn>
                                <DataGridTextColumn ElementStyle="{StaticResource ColumnElementStyle}" Header="CV ID"      Binding="{Binding ALAM_CODE}"      ></DataGridTextColumn>
                                <DataGridTextColumn ElementStyle="{StaticResource ColumnElementStyle}" Header="Previously Disable Flag"       Binding="{Binding EQPT_ID}"   ></DataGridTextColumn>
                                <DataGridTextColumn ElementStyle="{StaticResource ColumnElementStyle}" Header="Previously Disable Time"         Binding="{Binding ALAM_LVL}"     ></DataGridTextColumn>
                                <DataGridTextColumn ElementStyle="{StaticResource ColumnElementStyle}" Header="Disable Time"   Binding="{Binding ADDRESS_ID}"   ></DataGridTextColumn>
                                <DataGridTextColumn ElementStyle="{StaticResource ColumnElementStyle}" Header="User Disable Flag"        Binding="{Binding ALAM_DESC}"    ></DataGridTextColumn>
                                <DataGridTextColumn ElementStyle="{StaticResource ColumnElementStyle}" Header="Safety Disable Flag"        Binding="{Binding ALAM_DESC}"    ></DataGridTextColumn>
                                <DataGridTextColumn ElementStyle="{StaticResource ColumnElementStyle}" Header="HID Disable Flag"        Binding="{Binding ALAM_DESC}"    ></DataGridTextColumn>
                                <DataGridTextColumn ElementStyle="{StaticResource ColumnElementStyle}" Header="System Disable Flag"        Binding="{Binding ALAM_DESC}"    ></DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </DockPanel>
                </Grid>

            </TabItem>
            <!--OHTC不需要對EQ Port進行操作-->
                <!--<TabItem Header="EQ Port List" Width="204" Height="35" Margin="5,0,-5,0">
                <Grid Background="#f6f6f6">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="55"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <DockPanel Grid.Row="0" Grid.Column="0">
                        <Border Width="24"/>
                        <TextBlock DockPanel.Dock="Left" Padding="0,0,10,0" TextAlignment="Center" VerticalAlignment ="Center" Foreground="#1b2338" ><Run Text="Port ID"/></TextBlock>
                        <ComboBox x:Name="cmdEqPortID" Width="250" Height="30" DisplayMemberPath="PORT_ID"/>
                        <Border Width="50"/>
                        <Button x:Name="btn_enable" Content="Enable" Click="btn_Click" Margin="5,0,5,0"/>
                        <Button x:Name="btn_disable" Content="Disable" Click="btn_Click"/>
                        <Border Width="auto"/>
                    </DockPanel>
                    <DockPanel Grid.Row="1" Grid.Column="0">
                        <DataGrid  x:Name="eqPortList" BorderThickness="0,1,0,0" BorderBrush="#e6e6e6" Margin="0,6,0,0" RowDetailsVisibilityMode="Collapsed" SelectionMode="Single" AlternationCount="2" Style="{DynamicResource DataGridStyle}" 
                                   IsReadOnly="True" AutoGenerateColumns="False" CanUserAddRows="False" SelectedCellsChanged="eqPortList_SelectedCellsChanged">
                            <DataGrid.CellStyle>
                                <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                                <Grid Background="{TemplateBinding Background}">
                                                    <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"></ContentPresenter>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Foreground" Value="White"/>
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="#005BA8"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Foreground" Value="White"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#005BA8"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.CellStyle>
                            <DataGrid.RowStyle>
                                <Style TargetType="{x:Type DataGridRow}">
                                    <Style.Triggers>
                                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                            <Setter Property="Background" Value="White" />
                                            <Setter Property="Foreground" Value="#1b2338" />
                                        </Trigger>
                                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                            <Setter Property="Background" Value="#f2f9ff" />
                                            <Setter Property="Foreground" Value="#1b2338" />
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="#005BA8"/>
                                            <Setter Property="Foreground" Value="White"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#005BA8"/>
                                            <Setter Property="Foreground" Value="White"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowStyle>
                            <DataGrid.Columns>
                                <DataGridCheckBoxColumn Width="50">
                                    <DataGridCheckBoxColumn.HeaderTemplate>
                                        <DataTemplate>
                                            <CheckBox Name="CheckBox" Style="{StaticResource CheckBoxStyle}" Click="AllCheckBox_Click" Checked="CheckBox_Checked" Tag="{Binding PORT_ID}" Margin="8,0,0,0" HorizontalAlignment="Left"></CheckBox>
                                        </DataTemplate>
                                    </DataGridCheckBoxColumn.HeaderTemplate>
                                    <DataGridCheckBoxColumn.ElementStyle>
                                        <Style TargetType="CheckBox" BasedOn="{StaticResource CheckBoxStyle}">
                                            <Setter Property="Tag" Value="{Binding Age}"></Setter>
                                        </Style>
                                    </DataGridCheckBoxColumn.ElementStyle>
                                </DataGridCheckBoxColumn>
                                <DataGridTextColumn Width="*" Binding="{Binding PORT_ID}" Header="Port ID"/>
                                <DataGridTextColumn Width="*" Binding="{Binding CST_ID}" Header="CST ID"/>
                                <DataGridTextColumn Width="*" Binding="{Binding STATUS}" Header="Status"/>
                                <DataGridTextColumn Width="*" Binding="{Binding PORT_STATUS}" Header="Event Type"/>
                                <DataGridTextColumn Width="*" Binding="{Binding PRIORITY}" Header="Priority"/>
                                <DataGridTextColumn Width="*" Binding="{Binding ALARM_STATUS}" Header="Alarm Status"/>
                                <DataGridTextColumn Width="*" Binding="{Binding ADR_ID}" Header="Address ID"/>
                                <DataGridTextColumn Width="*" Binding="{Binding UP_DATE_TIME}" Header="Update Time"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </DockPanel>
                </Grid>
            </TabItem>--> 
        </TabControl>
        <!--<TabControl Style="{StaticResource TabStripPlacement_Default}" Grid.Column="1">
            <TabItem Style="{StaticResource TabItemStyle_Default}" Header="Port List" Width="204" Height="35" Margin="-2,0,2,0">
                <Grid Background="#f6f6f6">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="87"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <DockPanel Grid.Row="0" Grid.Column="0">
                        <TextBlock Style="{StaticResource TextBlock_Default}" Padding="24,0,10,0" VerticalAlignment="Center" DockPanel.Dock="Left"><Run Text="Port ID"/></TextBlock>
                        <ComboBox x:Name="cmdPortID" Width="250" Height="30" DisplayMemberPath="PORT_ID">
                            <TextBlock>Port ID</TextBlock>
                        </ComboBox>
                        <TextBlock Style="{StaticResource TextBlock_Default}" Padding="77,0,10,0" VerticalAlignment ="Center" DockPanel.Dock="Left"><Run Text="Priority"/></TextBlock>
                        <Border  Width="250" Height="30">
                            <Tool:NumericUpDown x:Name="numPrority"/>
                        </Border>
                        <Border Width="50"/>
                        <Button Content="Set"/>
                        <Border Width="auto"/>
                    </DockPanel>
                    <DockPanel Grid.Row="1" Grid.Column="0">
                        <DataGrid x:Name="allPortList" FontSize="14" BorderThickness="0,3,0,0" BorderBrush="#e6e6e6" RowDetailsVisibilityMode="Collapsed" SelectionMode="Single" AlternationCount="2" Style="{DynamicResource DataGridStyle}"
                                  IsReadOnly="True" AutoGenerateColumns="False" CanUserAddRows="False" SelectedCellsChanged="allPortList_SelectedCellsChanged">
                            <DataGrid.Columns>
                                <DataGridTextColumn Width="*" Binding="{Binding PORT_TYPE}" Header="Port Type"/>
                                <DataGridTextColumn Width="*" Binding="{Binding PORT_ID}" Header="Port ID"/>
                                <DataGridTextColumn Width="*" Binding="{Binding CST_ID}" Header="CST ID"/>
                                <DataGridTextColumn Width="*" Binding="{Binding STATUS}" Header="Status"/>
                                <DataGridTextColumn Width="*" Binding="{Binding PORT_STATUS}" Header="Event Type"/>
                                <DataGridTextColumn Width="*" Binding="{Binding PRIORITY}" Header="Priority"/>
                                <DataGridTextColumn Width="*" Binding="{Binding ALARM_STATUS}" Header="Alarm Status"/>
                                <DataGridTextColumn Width="*" Binding="{Binding ADR_ID}" Header="Address ID"/>
                                <DataGridTextColumn Width="*" Binding="{Binding UP_DATE_TIME}" Header="Update Time"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </DockPanel>
                </Grid>

            </TabItem>
            <TabItem Style="{StaticResource TabItemStyle_Default}" Header="EQ Port List" Width="204" Height="35" Margin="5,0,-5,0">
                <Grid Background="#f6f6f6">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="87"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <DockPanel Grid.Row="0" Grid.Column="0">
                        <TextBlock Style="{StaticResource TextBlock_Default}" Padding="24,0,10,0" VerticalAlignment="Center" DockPanel.Dock="Left"><Run Text="Port ID"/></TextBlock>
                        <ComboBox x:Name="cmdEqPortID" Width="250" Height="30" DisplayMemberPath="PORT_ID">
                            <TextBlock>Port ID</TextBlock>
                        </ComboBox>
                        <Border Width="50"/>
                        <Button Content="Enable"/>
                        <Border Width="5"/>
                        <Button Content="Disable"/>
                        <Border Width="2" Height="46" Background="#b2b2b2" Margin="5,0,5,0"/>
                        <Button Content="Load Request"/>
                        <Border Width="5"/>
                        <Button Content="Unload Request"/>
                        <Border Width="2" Height="46" Background="#b2b2b2" Margin="5,0,5,0"/>
                        <Button Content="Wait"/>
                        <Border Width="auto"/>
                    </DockPanel>
                    <DockPanel Grid.Row="1" Grid.Column="0">
                        <DataGrid x:Name="eqPortList" FontSize="14" BorderThickness="0,3,0,0" BorderBrush="#e6e6e6" RowDetailsVisibilityMode="Collapsed" SelectionMode="Single" AlternationCount="2" Style="{DynamicResource DataGridStyle}" 
                                   IsReadOnly="True" AutoGenerateColumns="False" CanUserAddRows="False" SelectedCellsChanged="eqPortList_SelectedCellsChanged">
                            <DataGrid.RowStyle>
                                <Style TargetType="{x:Type DataGridRow}">
                                    <Style.Triggers>
                                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                            <Setter Property="Background" Value="White" />
                                            <Setter Property="Foreground" Value="#1b2338" />
                                        </Trigger>
                                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                            <Setter Property="Background" Value="#f2f9ff" />
                                            <Setter Property="Foreground" Value="#1b2338" />
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="#bed0df"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#bed0df"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowStyle>

                            <DataGrid.Columns>
                                <DataGridCheckBoxColumn Width="20" Binding="{x:Null}" ClipboardContentBinding="{x:Null}"/>
                                <DataGridTextColumn Width="*" Binding="{Binding PORT_ID}" Header="Port ID"/>
                                <DataGridTextColumn Width="*" Binding="{Binding CST_ID}" Header="CST ID"/>
                                <DataGridTextColumn Width="*" Binding="{Binding STATUS}" Header="Status"/>
                                <DataGridTextColumn Width="*" Binding="{Binding PORT_STATUS}" Header="Event Type"/>
                                <DataGridTextColumn Width="*" Binding="{Binding PRIORITY}" Header="Priority"/>
                                <DataGridTextColumn Width="*" Binding="{Binding ALARM_STATUS}" Header="Alarm Status"/>
                                <DataGridTextColumn Width="*" Binding="{Binding ADR_ID}" Header="Address ID"/>
                                <DataGridTextColumn Width="*" Binding="{Binding UP_DATE_TIME}" Header="Update Time"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </DockPanel>
                </Grid>
            </TabItem>
        </TabControl>-->
    </Grid>

</UserControl>

<UserControl xmlns:Components="clr-namespace:com.mirle.ibg3k0.ohxc.winform.UI.Components"  x:Class="com.mirle.ibg3k0.ohxc.winform.UI.Components.SubPage.uc_SP_AlarmMaintenance"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:local="clr-namespace:com.mirle.ibg3k0.ohxc.winform.UI.Components.SubPage"
             mc:Ignorable="d"
             d:DesignHeight="721" d:DesignWidth="1650" FontFamily="MicrosoftSansSerif" FontSize="18" Foreground="#1b2338" Background="#f6f6f6">
    <UserControl.Resources>
        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="40" />
                </Grid.ColumnDefinitions>
                <Border Grid.Column="0" Background="White" BorderThickness="1,1,0,1" BorderBrush="#b2b2b2" />

                <Border Grid.Column="1" Background="White" BorderThickness="0,1,1,1" BorderBrush="#b2b2b2" Cursor="Hand"/>
                <Path x:Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Margin="12" Stretch="Fill" Fill="#005ba8" />
            </Grid>
        </ControlTemplate>
        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="250"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Foreground" Value="#1b2338"/>
            <Setter Property="FontFamily" Value="MicrosoftSansSerif"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <!-- ToggleButton 已数据绑定到 ComboBox 本身以切换 IsDropDownOpen -->
                            <ToggleButton Grid.Column="2" Template="{DynamicResource ComboBoxToggleButton}" x:Name="ToggleButton" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                            <ContentPresenter HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="ContentSite" VerticalAlignment="Center" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False"/>

                            <!-- 必须将 TextBox 命名为 PART_EditableTextBox，否则 ComboBox 将无法识别它 -->
                            <TextBox Visibility="Hidden" Template="{DynamicResource ComboBoxTextBox}" HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="PART_EditableTextBox" Style="{x:Null}" VerticalAlignment="Center" Focusable="True" Background="Transparent" IsReadOnly="{TemplateBinding IsReadOnly}"/>

                            <!-- Popup 可显示 ComboBox 中的项列表。IsOpen 已数据绑定到通过 ComboBoxToggleButton 来切换的 IsDropDownOpen -->
                            <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                                <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                    <Border x:Name="DropDownBorder" Background="{DynamicResource WindowBackgroundBrush}" BorderBrush="{DynamicResource SolidBorderBrush}" BorderThickness="1"/>
                                    <ScrollViewer Margin="4,6,4,6" Style="{DynamicResource SimpleScrollViewer}" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                        <!-- StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True -->
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Background="White"/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Width" Value="150"/>
            <Setter Property="Height" Value="33"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="#005ba8"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="ButtonBorder" CornerRadius="5" BorderThickness="0,0,0,3">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="#003366"/>
                            </Border.BorderBrush>
                            <Border.Background>
                                <LinearGradientBrush>
                                    <GradientStop Color="#005ba8" Offset="0" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" TextElement.FontWeight="Normal"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="ButtonBorder" Value="#008aff"/>
                                <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="#003366"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="ButtonBorder" Property="Background" Value="#b2b2b2" />
                                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="Transparent" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="TextBlock" x:Key="Title_18px">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Foreground" Value="#070022"/>
            <Setter Property="Padding" Value="0,13,10,12"/>
            <Setter Property="Height" Value="46"/>
            <Setter Property="Width" Value="165"/>
            <Setter Property="TextAlignment" Value="Right"/>
        </Style>
        <Style TargetType="{x:Type TextBox}" x:Key="TextBox_Default">
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="250"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Foreground" Value="#070022"/>
            <Setter Property="FontFamily" Value="MicrosoftSansSerif"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" Width="auto" Height="auto" BorderThickness="1" BorderBrush="#adadad">
                            <Grid x:Name="grid" Background="White">
                                <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type Hyperlink}" TargetType="{x:Type Hyperlink}">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Foreground" Value="#005ba8"/>
            <Setter Property="TextDecorations" Value="Underline"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="Red"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type DatePicker}">
            <Setter Property="Width" Value="250"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Foreground" Value="#070022"/>
            <Setter Property="FontFamily" Value="MicrosoftSansSerif"/>
        </Style>
        <Style x:Key="chkBase" TargetType="CheckBox">
            <Setter Property="IsChecked" Value="False"/>
            <Setter Property="Background" Value="Transparent"/>
            <!--<Setter Property="Foreground" Value="#999"/>-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <DockPanel  Background="{TemplateBinding Background}" ToolTip="{TemplateBinding Content}" LastChildFill="False" Width="{TemplateBinding Width}">
                            <Image Margin="20 0 0 0" DockPanel.Dock="Left" x:Name="_img"  Stretch="None" Source="/Resources/SystemIcon/chk_no.png"/>
                            <TextBlock DockPanel.Dock="Left" Foreground="{TemplateBinding Foreground}" Margin="2 0 0 0" VerticalAlignment="Center" Text="{Binding Content,RelativeSource={RelativeSource TemplatedParent}}" />
                        </DockPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="_img" Property="Source" Value="/Resources/SystemIcon/chk_yes.png"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter TargetName="_img" Property="Source" Value="/Resources/SystemIcon/chk_null.png"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="151*"/>
            <ColumnDefinition Width="93*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="128"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid Grid.ColumnSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="92"/>
                <RowDefinition Height="36"/>
            </Grid.RowDefinitions>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="350"/>
                    <ColumnDefinition Width="25"/>
                    <ColumnDefinition Width="415"/>
                    <ColumnDefinition Width="25"/>
                    <ColumnDefinition Width="415"/>
                    <ColumnDefinition Width="50"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <WrapPanel>
                    <DockPanel x:Name="DockPanel1" Height="46" Width="350">
                        <TextBlock x:Name="TitleName1" Style="{StaticResource Title_18px}" Width="100" Text="Start Time"/>
                        <xctk:DateTimePicker x:Name="m_StartDTCbx" Format="Custom" FormatString="yyyy-MM-dd HH:mm:ss" CultureInfo="en-US" TimeFormat="Custom" TimeFormatString="HH:mm:ss" TextAlignment="Left"
                                        Grid.Row="0" Height="30" Width="250" CurrentDateTimePart="Day"/>
                    </DockPanel>
                    <DockPanel x:Name="DockPanel2" Height="46" Width="350">
                        <TextBlock x:Name="TitleName2" Style="{StaticResource Title_18px}" Width="100" Text="End Time"/>
                        <xctk:DateTimePicker x:Name="m_EndDTCbx" Format="Custom" FormatString="yyyy-MM-dd HH:mm:ss" CultureInfo="en-US" TimeFormat="Custom" TimeFormatString="HH:mm:ss" TextAlignment="Left"
                                         Grid.Row="0" Height="30" Width="250" />
                    </DockPanel>
                </WrapPanel>
                <WrapPanel Grid.Column="2">
                    <DockPanel x:Name="DockPanel3" Width="415" Height="46">
                        <TextBlock Style="{StaticResource Title_18px}" Text="Every Hour Interval"/>
                        <TextBox x:Name="EveryHourInterval" Style="{StaticResource TextBox_Default}"></TextBox>
                    </DockPanel>
                    <DockPanel x:Name="DockPanel4" Width="415" Height="46">
                        <TextBlock Style="{StaticResource Title_18px}" Text="Alarm Code"/>
                        <TextBox x:Name="AlarmCode" Style="{StaticResource TextBox_Default}"></TextBox>
                    </DockPanel>
                </WrapPanel>
                <WrapPanel Grid.Column="4">
                    <DockPanel x:Name="DockPanel5" Width="415" Height="46">
                        <TextBlock Style="{StaticResource Title_18px}" Text="Equipment ID"/>
                        <ComboBox x:Name="cb_VehicleIDs"/>
                    </DockPanel>
                    <DockPanel x:Name="DockPanel6" Width="415" Height="46">
                        <TextBlock Style="{StaticResource Title_18px}" Text="Alarm Status"/>
                        <CheckBox x:Name="ck_IsSet" Content="Set" Style="{StaticResource chkBase}"/>
                        <CheckBox x:Name="ck_IsClear" Content="Clear"  Style="{StaticResource chkBase}"/>
                    </DockPanel>
                </WrapPanel>
                <Button Grid.Column="6" Name="btn_Search" Content="Search" Margin="-34,-46,0,0" IsDefault="True" Click="btn_Search_Click"/>
            </Grid>
            <WrapPanel Grid.Row="0">
            </WrapPanel>
            <DockPanel Grid.Row="1" Margin="10,9,0,0">
                <TextBlock Margin="0,0,20,0"><Hyperlink x:Name="HypL30mins"  Click="Button_Click">Last 30 minutes</Hyperlink></TextBlock>
                <TextBlock Margin="0,0,20,0"><Hyperlink x:Name="HypL1hours"  Click="Button_Click">Last 1 hour</Hyperlink></TextBlock>
                <TextBlock Margin="0,0,20,0"><Hyperlink x:Name="HypL4hours"  Click="Button_Click">Last 4 hour</Hyperlink></TextBlock>
                <TextBlock Margin="0,0,20,0"><Hyperlink x:Name="HypL12hours" Click="Button_Click">Last 12 hour</Hyperlink></TextBlock>
                <TextBlock Margin="0,0,20,0"><Hyperlink x:Name="HypL24hours" Click="Button_Click">Last 24 hour</Hyperlink></TextBlock>
                <TextBlock Margin="0,0,20,0"><Hyperlink x:Name="HypL2days"   Click="Button_Click">Last 2 days</Hyperlink></TextBlock>
                <TextBlock Margin="0,0,20,0"><Hyperlink x:Name="HypL3days"   Click="Button_Click">Last 3 days</Hyperlink></TextBlock>
                <Border/>
            </DockPanel>
        </Grid>
        <Components:uctl_AlarmList x:Name="uctl_AlarmList" Grid.Row="1" Grid.ColumnSpan="2" Margin="0,6,0,0"/>
    </Grid>

</UserControl>

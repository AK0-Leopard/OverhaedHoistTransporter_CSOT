<UserControl xmlns:Components="clr-namespace:WPF.Components"  xmlns:Tool="clr-namespace:com.mirle.ibg3k0.ohxc.winform.UI.Components.Tool"  x:Class="com.mirle.ibg3k0.ohxc.winform.UI.Components.WPF_UserControl.uc_MTLMTSStatus"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:com.mirle.ibg3k0.ohxc.winform.UI.Components.WPF_UserControl"
             mc:Ignorable="d" d:DesignHeight="721" d:DesignWidth="753" FontFamily="MicrosoftSansSerif" FontSize="18" Foreground="#1b2338" Background="#f6f6f6">
    <UserControl.Resources>
        <Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="False" />
            <!--<Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}" />-->
            <Setter Property="Height" Value="15"/>
            <Setter Property="Width" Value="15"/>
            <Setter Property="IsChecked" Value="{Binding IsChecked}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Margin" Value="17,0,0,0"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid>
                            <!--<Grid.ColumnDefinitions>
                                <ColumnDefinition Width="40"/>
                            </Grid.ColumnDefinitions>-->
                            <Grid Height="{TemplateBinding Height}" Width="{TemplateBinding Height}">
                                <Rectangle x:Name="CheckBoxRectangle" Fill="White"/>
                                <Rectangle x:Name="CheckBoxRectangleOut" Stroke="#707070" StrokeThickness="1"/>
                                <Grid x:Name="CheckedMark" Width="15" Height="15" Visibility="Collapsed">
                                    <Path SnapsToDevicePixels="False" StrokeThickness="2" Data="F1 M 0.468732,4.66838L 3.03345,7.95443L 7.28127,0.420569" Margin="4,2,0,0" Stroke="White"/>
                                </Grid>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckedMark" Property="Visibility" Value="Visible"></Setter>
                                <Setter TargetName="CheckBoxRectangle" Property="Fill" Value="#005ba8"></Setter>
                                <Setter TargetName="CheckBoxRectangle" Property="Opacity" Value="1"></Setter>
                                <Setter TargetName="CheckBoxRectangleOut" Property="Stroke" Value="Transparent"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="TextBlock" x:Key="TextBlock_Default">
            <!--<Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>-->
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Foreground" Value="#1b2338"/>
            <Setter Property="FontFamily" Value="MicrosoftSansSerif"/>
        </Style>
        <Style TargetType="TextBlock" x:Key="TextBlock_Arrow">
            <Setter Property="Margin" Value="20" />
            <Setter Property="FontSize" Value="50" />
            <Setter Property="FontFamily" Value="Segoe UI Symbol" />
        </Style>
        <Style TargetType="TextBlock" x:Key="ContentTitle_18px" BasedOn="{StaticResource TextBlock_Default}">
            <Setter Property="Background" Value="#e6e6e6"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Foreground" Value="#070022"/>
            <Setter Property="Padding" Value="0,8,0,0"/>
            <Setter Property="Margin" Value="0,0,0,10"/>
            <Setter Property="Height" Value="35"/>
        </Style>
        <Style TargetType="TextBlock" x:Key="Title_16px" BasedOn="{StaticResource TextBlock_Default}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Foreground" Value="#070022"/>
            <Setter Property="Padding" Value="0,5,0,0"/>
        </Style>
        <Style TargetType="TextBlock" x:Key="Title_14px" BasedOn="{StaticResource TextBlock_Default}">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="White"/>
        </Style>
        <Style TargetType="{x:Type TabControl}" x:Key="TabStripPlacement_Default">

            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="BorderThickness" Value="0,6,0,0"/>
            <Setter Property="BorderBrush" Value="#005ba8"/>
            <Setter Property="Background" Value="#e6e6e6"/>
            <Setter Property="Padding" Value="3,3,3,3"/>
        </Style>
        <Style TargetType="{x:Type TabItem}" x:Key="TabItemStyle_Default">
            <Setter Property="Margin" Value="-5,0,5,0"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Width" Value="204"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border x:Name="Border">
                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="10,2"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#005ba8" />
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="White" />
                                <Setter Property="Foreground" Value="#1b2338"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="#005ba8"/>
            <Setter Property="Width" Value="150"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" CornerRadius="5" x:Name="PART_Background" >
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0,0" StartPoint="0,0">
                                    <GradientStop Color="White" Offset="0.0" />
                                    <GradientStop Color="#005ba8" Offset="0.5" />
                                    <GradientStop Color="White" Offset="0.0" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="yellow"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="false">
                                <Setter Property="Background" Value="green"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" Value="Orange"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" Value="#b2b2b2"/>
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Cursor" Value="Hand" />
        </Style>
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border x:Name="Border">
                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="10,2"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#005ba8" />
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="white" />
                                <Setter Property="Foreground" Value="#1b2338"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- DataGridColumnHeader style -->
        <Style x:Key="ColumnHeaderStyle1" TargetType="DataGridColumnHeader">
            <Setter Property="Height" Value="30"/>
            <Setter Property="Padding" Value="10,5,10,5" />
            <Setter Property="Background" Value="#bed0df"/>
            <Setter Property="Foreground" Value="#1b2338"/>
            <Setter Property="FontSize" Value="14px"/>
            <Setter Property="BorderBrush" Value="#e6e6e6"/>
            <Setter Property="BorderThickness"  Value="0,1,1,1"/>
        </Style>
        <!-- DataGridColumnContent style -->
        <Style x:Key="ColumnElementStyle" TargetType="TextBlock">
            <Setter Property="Padding" Value="10,5,10,5" />
        </Style>
        <Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
            <Setter Property="FontSize" Value="14px"/>
            <Setter Property="ColumnHeaderStyle" Value="{DynamicResource ColumnHeaderStyle1}"/>
            <!--网格线颜色-->
            <Setter Property="BorderBrush" Value="#e6e6e6" />
            <Setter Property="HorizontalGridLinesBrush">
                <Setter.Value>
                    <SolidColorBrush Color="#e6e6e6"/>
                </Setter.Value>
            </Setter>
            <Setter Property="VerticalGridLinesBrush">
                <Setter.Value>
                    <SolidColorBrush Color="#e6e6e6"/>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SwitchTypeToggleButton"
       TargetType="{x:Type ToggleButton}">
            <Style.Resources>
                <Color x:Key="Color.Additional.LightGrey">#989EA8</Color>
                <Color x:Key="Color.Additional.MediumGrey">#61656B</Color>
                <Color x:Key="Color.MedtronicBranding.MedtronicBlue">#004B87</Color>
                <Color x:Key="Color.MedtronicBranding.CobaltBlue">#0085CA</Color>

                <Style x:Key="ToggleButtonContentTextbox"
               TargetType="TextBlock">
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Setter Property="VerticalAlignment" Value="Stretch" />
                </Style>
                <SolidColorBrush x:Key="ToggleButtonFalseBackground"
                         Color="{StaticResource Color.Additional.LightGrey}" />
                <SolidColorBrush x:Key="ToggleButtonTrueBackground"
                         Color="{StaticResource Color.MedtronicBranding.CobaltBlue}" />
                <SolidColorBrush x:Key="ToggleButtonFalseForeground"
                         Color="{StaticResource Color.Additional.MediumGrey}" />
                <SolidColorBrush x:Key="ToggleButtonTrueForeground"
                         Color="{StaticResource Color.MedtronicBranding.MedtronicBlue}" />
                <TextBlock x:Key="OffContent"
                   Style="{StaticResource ToggleButtonContentTextbox}"
                   Text="Off" />
                <Style x:Key="OnContentControl"
               TargetType="ContentControl">
                    <Setter Property="HorizontalAlignment" Value="Center" />
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <TextBlock FontFamily="Wingdings 2"
                                   FontSize="24"
                                   FontWeight="Bold"
                                   Foreground="White"
                                   Style="{StaticResource ToggleButtonContentTextbox}"
                                   Text="P" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                </Style>
                <Style x:Key="OffContentControl"
               TargetType="ContentControl">
                    <Setter Property="HorizontalAlignment" Value="Center" />
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate>
                                <TextBlock FontSize="24"
                                   Foreground="White"
                                   Style="{StaticResource ToggleButtonContentTextbox}"
                                   Text="X" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                </Style>

            </Style.Resources>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid x:Name="MainRow">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{Binding ElementName=TopRow,
                        Path=ActualHeight}" />
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="{Binding ElementName=TopRow,
                        Path=ActualHeight}" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="TopRow" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <Ellipse x:Name="BackgroundEllipse1"
                                 Grid.RowSpan="2"
                                 Grid.Column="0"
                                 Grid.ColumnSpan="3"
                                 Width="{Binding ElementName=MainRow,
                                                 Path=ActualHeight}"
                                 Height="{Binding ElementName=MainRow,
                                                  Path=ActualHeight}"
                                 HorizontalAlignment="Left"
                                 Fill="{StaticResource ToggleButtonTrueBackground}" />
                                <Ellipse x:Name="BackgroundEllipse2"
                                 Grid.Row="0"
                                 Grid.RowSpan="2"
                                 Grid.Column="0"
                                 Grid.ColumnSpan="3"
                                 Width="{Binding ElementName=MainRow,
                                                 Path=ActualHeight}"
                                 Height="{Binding ElementName=MainRow,
                                                  Path=ActualHeight}"
                                 HorizontalAlignment="Right"
                                 Fill="{StaticResource ToggleButtonFalseBackground}" />
                                <Border x:Name="BackgroundBorder"
                                Grid.Row="0"
                                Grid.RowSpan="2"
                                Grid.Column="1"
                                Background="{StaticResource ToggleButtonTrueBackground}" />
                            </Grid>
                            <Grid HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="AnimationWidth" />
                                    <ColumnDefinition Width="{Binding ElementName=MainRow,
                        Path=ActualHeight}" />
                                </Grid.ColumnDefinitions>
                                <Border x:Name="AnimationSizeBorder"
                                Grid.Column="0" />
                                <ContentControl Grid.Column="0"
                                        Style="{StaticResource OnContentControl}" />
                            </Grid>
                            <Grid HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{Binding ElementName=MainRow,
                Path=ActualHeight}" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <ContentControl Grid.Column="1"
                                        Style="{StaticResource OffContentControl}" />
                            </Grid>
                            <Grid Background="Transparent">
                                <StackPanel HorizontalAlignment="Left"
                                    Orientation="Horizontal">
                                    <Border Width="{Binding ElementName=AnimationSizeBorder,
                Path=ActualWidth}" />
                                    <Ellipse x:Name="ForegroundEllipse"
                                     Width="{Binding ElementName=MainRow,
                                                     Path=ActualHeight}"
                                     Height="{Binding ElementName=MainRow,
                                                      Path=ActualHeight}"
                                     HorizontalAlignment="Right"
                                     Fill="{StaticResource ToggleButtonTrueForeground}" />
                                </StackPanel>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="BackgroundBorder" Property="Background"
                Value="{StaticResource ToggleButtonFalseBackground}" />
                                <Setter TargetName="ForegroundEllipse" Property="Fill"
                Value="{StaticResource ToggleButtonFalseForeground}" />
                                <!--<Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName
                        ="AnimationSizeBorder"
                        Storyboard.TargetProperty="(Border.Width)"
                        To="0" Duration="0:0:3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>

                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName=
                        "AnimationSizeBorder"
                        Storyboard.TargetProperty="(Border.Width)"
                        From="0" Duration="0:0:3"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>-->
                                <Setter TargetName="AnimationSizeBorder" Property="Width" Value="0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <StackPanel>
            <TextBlock Style="{StaticResource ContentTitle_18px}" Text="MTL/MTS Status" VerticalAlignment="Top"/>
            <TabControl Style="{StaticResource TabStripPlacement_Default}" Grid.Column="1" Grid.Row="2" Height="676">
                <TabItem Name="TabItem_MTLMTS1" Style="{StaticResource TabItemStyle_Default}" Header="MTL/MTS">
                    <StackPanel>
                        <DataGrid x:Name="grid_MTLMTS1" ItemsSource="{Binding}" Style="{DynamicResource DataGridStyle1}" Height="95" AlternationCount="2" AutoGenerateColumns="False" IsReadOnly="True" BorderBrush="#e6e6e6" BorderThickness="0,0,0,3">
                            <DataGrid.CellStyle>
                                <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                                <Grid Background="{TemplateBinding Background}">
                                                    <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"></ContentPresenter>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Foreground" Value="White"/>
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="#005BA8"/>
                                        </Trigger>
                                        <!--<Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Foreground" Value="White"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#005BA8"/>
                                        </Trigger>-->
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.CellStyle>
                            <DataGrid.RowStyle>
                                <Style TargetType="{x:Type DataGridRow}">
                                    <Style.Triggers>
                                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                            <Setter Property="Background" Value="White" />
                                            <Setter Property="Foreground" Value="#1b2338" />
                                        </Trigger>
                                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                            <Setter Property="Background" Value="#f2f9ff" />
                                            <Setter Property="Foreground" Value="#1b2338" />
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="#005BA8"/>
                                            <Setter Property="Foreground" Value="White"/>
                                        </Trigger>
                                        <!--<Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#005BA8"/>
                                            <Setter Property="Foreground" Value="White"/>
                                        </Trigger>-->
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowStyle>
                            <DataGrid.Columns>
                                <DataGridTextColumn ElementStyle="{StaticResource ColumnElementStyle}" Binding="{Binding stationID}" Width="70" Header="Station"/>
                                <DataGridTemplateColumn Width="75" Header="Network">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Image Height="15" Width="15" Margin="11,7,0,7">
                                                <Image.Style>
                                                    <Style TargetType="{x:Type Image}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Plc_Link_Stat}" Value="LinkFail">
                                                                <Setter Property="Source" Value="/Resources/SystemIcon/icon_Link_OFF.png"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Plc_Link_Stat}" Value="LinkOK">
                                                                <Setter Property="Source" Value="/Resources/SystemIcon/icon_Link_ON.png"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Width="60" Header="Alive">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Image Height="15" Width="15" Margin="11,7,0,7">
                                                <Image.Style>
                                                    <Style TargetType="{x:Type Image}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Alive}" Value="False">
                                                                <Setter Property="Source" Value="/Resources/SystemIcon/icon_Link_OFF.png"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Alive}" Value="True">
                                                                <Setter Property="Source" Value="/Resources/SystemIcon/icon_Link_ON.png"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Width="60" Header="Mode">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Image Height="15" Width="15" Margin="11,7,0,7">
                                                <Image.Style>
                                                    <Style TargetType="{x:Type Image}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Mode}" Value="Manual">
                                                                <Setter Property="Source" Value="/Resources/SystemIcon/icon_Link_OFF.png"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Mode}" Value="Auto">
                                                                <Setter Property="Source" Value="/Resources/SystemIcon/icon_Link_ON.png"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <!--<DataGridTemplateColumn Width="80" Header="Interlock">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>-->

                                            <!--<Button Name="btn_Interlock" Width="45" Height="20" Margin="11,7,0,7" Style="{StaticResource btnStyle_Interlock}" Click="Button_Click" CommandParameter="{Binding Interlock}">
                                                <Image Width="45" Height="20">
                                                    <Image.Style>
                                                        <Style TargetType="{x:Type Image}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Interlock}" Value="False">
                                                                    <Setter Property="Source" Value="/Resources/SystemIcon/icon_Link_OFF.png"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Interlock}" Value="True">
                                                                    <Setter Property="Source" Value="/Resources/SystemIcon/icon_Link_ON.png"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Image.Style>
                                                </Image>
                                            </Button>-->
                                            <!--<Button Click="Button_Click" Name="MediaButton" Style="{StaticResource Button_Interlock}">
                                                <DynamicResource ResourceKey="Interlock_Off"/>
                                            </Button>-->
                                        <!--</DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>-->
                                <DataGridTemplateColumn Header="Interlock" Width="80" SortMemberPath="Interlock">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <!--<Tool:ToggleButton Margin="7.5,6,0,4" Width="45"  MouseLeftButtonDown="InterLock_MouseLeftButtonDown">
                                                <Tool:ToggleButton.Style>
                                                    <Style TargetType="ToggleButton">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Interlock}" Value="False">
                                                                <Setter Property="IsChecked" Value="False"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Interlock}" Value="True">
                                                                <Setter Property="IsChecked" Value="True"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Tool:ToggleButton.Style>
                                            </Tool:ToggleButton>-->
                                            <ToggleButton IsThreeState="False" Margin="7.5,6,0,4" Width="45" Height="20" Style="{StaticResource SwitchTypeToggleButton}"
                                                          IsChecked="{Binding Interlock, Mode=OneWay}" Checked="ToggleButton_Checked" Unchecked="ToggleButton_Checked">
                                                <Style TargetType="ToggleButton">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Interlock}" Value="False">
                                                            <Setter Property="IsChecked" Value="False"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Interlock}" Value="True">
                                                            <Setter Property="IsChecked" Value="True"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                                <!--Unchecked="Edit_ToggleButton_Unchecked"-->
                                                <!--<Image Height="20" Width="45" Margin="11,7,0,7">
                                                    <Image.Style>
                                                        <Style TargetType="{x:Type Image}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Interlock}" Value="False">
                                                                    <Setter Property="Source" Value="/Resources/SystemIcon/icon_Link_OFF.png"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Interlock}" Value="True">
                                                                    <Setter Property="Source" Value="/Resources/SystemIcon/icon_Link_ON.png"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Image.Style>
                                                </Image>-->
                                            </ToggleButton>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn ElementStyle="{StaticResource ColumnElementStyle}" Binding="{Binding CarID}" Width="105" Header="Vehicle ID"/>
                                <DataGridTextColumn ElementStyle="{StaticResource ColumnElementStyle}" Binding="{Binding MTLLocation}" Width="105" Header="LFT Position"/>
                                <DataGridTextColumn ElementStyle="{StaticResource ColumnElementStyle}" Binding="{Binding SyncronizeTime, StringFormat=\{0:yyyy/MM/dd HH:mm:ss\}, Mode=OneWay}" Width="*" Header="Syncronize Time"/>
                                
                            </DataGrid.Columns>
                        </DataGrid>
                        <Grid Height="536" Background="white">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="152"/>
                                <ColumnDefinition Width="150"/>
                                <ColumnDefinition Width="83"/>
                                <ColumnDefinition Width="210"/>
                                <ColumnDefinition Width="152"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="29"/>
                                <RowDefinition Height="500"/>
                            </Grid.RowDefinitions>
                            <StackPanel Background="#b2b2b2"/>
                            <StackPanel Background="#b2b2b2" Grid.Column="2"/>
                            <StackPanel Background="#b2b2b2" Grid.Column="4"/>
                            <!--MTL-->
                            <Grid Grid.Column="3" Grid.RowSpan="2">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="30"/>
                                    <RowDefinition Height="20"/>
                                    <RowDefinition Height="58"/>
                                    <RowDefinition Height="287"/>
                                    <RowDefinition Height="20"/>
                                    <RowDefinition Height="58"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="15"/>
                                    <ColumnDefinition Width="180"/>
                                    <ColumnDefinition Width="15"/>
                                </Grid.ColumnDefinitions>
                                <Border Background="#e6e6e6" Grid.ColumnSpan="3" Grid.RowSpan="5"></Border>
                                <Border Grid.Column="1" BorderThickness="2" BorderBrush="#707070" Height="30" VerticalAlignment="Top">
                                    <TextBlock DockPanel.Dock="Top" Text="MTL" Style="{StaticResource Title_16px}"></TextBlock>
                                </Border>
                                <StackPanel Grid.Column="1" Grid.Row="2" Grid.RowSpan="2" Background="White">
                                    <Image Name="VhSignal_MTLUp" Height="58" Width="85" VerticalAlignment="Top" Source="/Resources/VehiclePisplay/MTL Vehicle _None.png"/>
                                    <Image Name="LiftArrowSig" Height="32" Width="30" VerticalAlignment="Top" Margin="0,100.9,0,0"></Image>
                                </StackPanel>
                                <Border Name="LiftSigOff_Up" Grid.Column="1" Grid.Row="1" Background="#f5f5f5" Visibility="Collapsed"></Border>
                                <Border Name="LiftSigOn_Up" Grid.Column="1" Grid.Row="1" BorderThickness="2" BorderBrush="#707070" Height="20" VerticalAlignment="Top" Visibility="Collapsed">
                                    <TextBlock Name="LiftUp" DockPanel.Dock="Top" Text="Lift" Style="{StaticResource Title_16px}" Padding="0,0,0,0"></TextBlock>
                                </Border>
                                <Image Name="InLockSignal_MTL1A" Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" Height="34" Width="15" HorizontalAlignment="Left"  Source="/Resources/SystemIcon/MTL_red.png" VerticalAlignment="Top"></Image>
                                <Image Name="InLockSignal_MTL1B" Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" Height="34" Width="15" HorizontalAlignment="Right" Source="/Resources/SystemIcon/MTL_red.png" VerticalAlignment="Top"></Image>
                                <!--<Rectangle Name="InLockSignal_MTL1" Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" Fill="Red" Height="34" StrokeThickness="2" StrokeDashArray="4 4" SnapsToDevicePixels="True" VerticalAlignment="Top" Margin="0,0,165,0"/>
                                <Rectangle Name="InLockSignal_MTL2" Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" Fill="Red" Height="34" Width="15" StrokeThickness="2" StrokeDashArray="4 4" SnapsToDevicePixels="True" VerticalAlignment="Top" HorizontalAlignment="Right"/>-->
                                <Border Name="LiftSigOn_Down" Grid.Column="1" Grid.Row="4" BorderThickness="2" BorderBrush="#707070" Height="20" VerticalAlignment="Top">
                                    <TextBlock DockPanel.Dock="Top" Text="Lift" Style="{StaticResource Title_16px}" Padding="0,0,0,0"></TextBlock>
                                </Border>
                                <Border Name="LiftSigOff_Down" Grid.Column="1" Grid.Row="4" Background="#f5f5f5" Visibility="Collapsed"></Border>
                                <Image Name="VhSignal_MTLDown" Grid.Column="1" Grid.Row="5" Height="58" Width="85" Source="/Resources/VehiclePisplay/MTL Vehicle _None.png" VerticalAlignment="Top"/>
                            </Grid>
                            <!--此ToggleButton僅供測試使用-->
                            <!--<Tool:ToggleButton x:Name="InterLock" Grid.Column="4" Grid.Row="2" Width="100" MouseLeftButtonDown="InterLock_MouseLeftButtonDown"/>-->
                            <!--MTS1-->
                            <StackPanel Grid.Column="1" Grid.RowSpan="2" VerticalAlignment="Top" HorizontalAlignment="Right" Width="150">
                                <Border BorderThickness="2" BorderBrush="#707070" Height="30" Width="150" VerticalAlignment="Top">
                                    <TextBlock DockPanel.Dock="Top" Text="MTS" Style="{StaticResource Title_16px}"></TextBlock>
                                </Border>
                                <DockPanel>
                                    <Image Name="InLockSignal_MTS1A" Height="65" Width="15" HorizontalAlignment="Left" Source="/Resources/MTS_red.png" VerticalAlignment="Top"></Image>
                                    <Image Name="VhSignal_MTS1"      Height="58" Width="85" Margin="17,0,0,0" Source="/Resources/VehiclePisplay/MTL Vehicle _None.png" VerticalAlignment="Top"/>
                                    <Image Name="InLockSignal_MTS1B" Height="65" Width="15" HorizontalAlignment="Right" Source="/Resources/MTS_red.png" VerticalAlignment="Top"></Image>
                                </DockPanel>
                                <Border Height="15" Background="#b2b2b2"/>
                            </StackPanel>
                        </Grid>
                    </StackPanel>
                </TabItem>
                <TabItem Name="TabItem_MTS2" Style="{StaticResource TabItemStyle_Default}" Header="MTS2" Margin="5,0,-5,0">
                    <StackPanel>
                        <DataGrid x:Name="grid_MTS2" ItemsSource="{Binding}" AutoGenerateColumns="False" IsReadOnly="True" AlternationCount="2" Style="{DynamicResource DataGridStyle1}" Height="90" BorderBrush="#e6e6e6" BorderThickness="0,0,0,3" ScrollViewer.CanContentScroll="True" SelectionMode="Single">
                            <DataGrid.CellStyle>
                                <Style TargetType="DataGridCell" BasedOn="{StaticResource {x:Type DataGridCell}}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                                <Grid Background="{TemplateBinding Background}">
                                                    <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"></ContentPresenter>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Foreground" Value="White"/>
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="#005BA8"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Foreground" Value="White"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#005BA8"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.CellStyle>
                            <DataGrid.RowStyle>
                                <Style TargetType="{x:Type DataGridRow}">
                                    <Style.Triggers>
                                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                            <Setter Property="Background" Value="White" />
                                            <Setter Property="Foreground" Value="#1b2338" />
                                        </Trigger>
                                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                            <Setter Property="Background" Value="#f2f9ff" />
                                            <Setter Property="Foreground" Value="#1b2338" />
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="#005BA8"/>
                                            <Setter Property="Foreground" Value="White"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#005BA8"/>
                                            <Setter Property="Foreground" Value="White"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowStyle>
                            <DataGrid.Columns>
                                <DataGridTextColumn ElementStyle="{StaticResource ColumnElementStyle}" Binding="{Binding stationID}" Width="70" Header="Station"/>
                                <DataGridTemplateColumn Width="75" Header="Network">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Image Height="15" Width="15" Margin="11,7,0,7">
                                                <Image.Style>
                                                    <Style TargetType="{x:Type Image}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Plc_Link_Stat}" Value="LinkFail">
                                                                <Setter Property="Source" Value="/Resources/SystemIcon/icon_Link_OFF.png"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Plc_Link_Stat}" Value="LinkOK">
                                                                <Setter Property="Source" Value="/Resources/SystemIcon/icon_Link_ON.png"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Width="60" Header="Alive">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Image Height="15" Width="15" Margin="11,7,0,7">
                                                <Image.Style>
                                                    <Style TargetType="{x:Type Image}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Alive}" Value="False">
                                                                <Setter Property="Source" Value="/Resources/SystemIcon/icon_Link_OFF.png"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Alive}" Value="True">
                                                                <Setter Property="Source" Value="/Resources/SystemIcon/icon_Link_ON.png"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Width="60" Header="Mode">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Image Height="15" Width="15" Margin="11,7,0,7">
                                                <Image.Style>
                                                    <Style TargetType="{x:Type Image}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Mode}" Value="Manual">
                                                                <Setter Property="Source" Value="/Resources/SystemIcon/icon_Link_OFF.png"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Mode}" Value="Auto">
                                                                <Setter Property="Source" Value="/Resources/SystemIcon/icon_Link_ON.png"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="Interlock" Width="80" SortMemberPath="Interlock">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <ToggleButton IsThreeState="False" Margin="7.5,6,0,4" Width="45" Height="20" Style="{StaticResource SwitchTypeToggleButton}"
                                                          IsChecked="{Binding Interlock, Mode=OneWay}" Checked="ToggleButton_Checked" Unchecked="ToggleButton_Checked">
                                            </ToggleButton>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn ElementStyle="{StaticResource ColumnElementStyle}" Binding="{Binding CarID}" Width="105" Header="Vehicle ID"/>
                                <DataGridTextColumn ElementStyle="{StaticResource ColumnElementStyle}" Binding="{Binding MTLLocation}" Width="105" Header="LFT Position"/>
                                <DataGridTextColumn ElementStyle="{StaticResource ColumnElementStyle}" Binding="{Binding SyncronizeTime, StringFormat=\{0:yyyy/MM/dd HH:mm:ss\}, Mode=OneWay}" Width="*" Header="Synchronize Time"/>
                            </DataGrid.Columns>
                        </DataGrid>
                        <Grid Height="536" Background="white">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="152"/>
                                <ColumnDefinition Width="150"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="29"/>
                                <RowDefinition Height="500"/>
                            </Grid.RowDefinitions>
                            <StackPanel Background="#b2b2b2" Grid.ColumnSpan="3"/>
                            <!--MTS2-->
                            <StackPanel Grid.Column="1" Grid.RowSpan="2" VerticalAlignment="Top">
                                <Border BorderThickness="2" BorderBrush="#707070" Height="30" Width="150" VerticalAlignment="Top">
                                    <TextBlock DockPanel.Dock="Top" Text="MTS2" Style="{StaticResource Title_16px}"></TextBlock>
                                </Border>
                                <DockPanel>
                                    <Image Name="InLockSignal_MTS2A" Height="65" Width="15" HorizontalAlignment="Left" Source="/Resources/MTS_red.png" VerticalAlignment="Top"></Image>
                                    <Image Name="VhSignal_MTS2"      Height="58" Width="85" Margin="17,0,0,0" Source="/Resources/VehiclePisplay/MTL Vehicle _None.png" VerticalAlignment="Top"/>
                                    <Image Name="InLockSignal_MTS2B" Height="65" Width="15" HorizontalAlignment="Right" Source="/Resources/MTS_red.png" VerticalAlignment="Top"></Image>
                                </DockPanel>
                                <Border Height="15" Background="#b2b2b2"/>
                            </StackPanel>
                        </Grid>
                    </StackPanel>
                </TabItem>
            </TabControl>
        </StackPanel>
    </Grid>
</UserControl>
